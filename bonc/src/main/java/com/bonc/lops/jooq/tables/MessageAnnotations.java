/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables;


import com.bonc.lops.jooq.Indexes;
import com.bonc.lops.jooq.Keys;
import com.bonc.lops.jooq.Public;
import com.bonc.lops.jooq.tables.records.MessageAnnotationsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageAnnotations extends TableImpl<MessageAnnotationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.message_annotations</code>
     */
    public static final MessageAnnotations MESSAGE_ANNOTATIONS = new MessageAnnotations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MessageAnnotationsRecord> getRecordType() {
        return MessageAnnotationsRecord.class;
    }

    /**
     * The column <code>public.message_annotations.id</code>.
     */
    public final TableField<MessageAnnotationsRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("uuid_generate_v4()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.message_annotations.app_id</code>.
     */
    public final TableField<MessageAnnotationsRecord, UUID> APP_ID = createField(DSL.name("app_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.message_annotations.conversation_id</code>.
     */
    public final TableField<MessageAnnotationsRecord, UUID> CONVERSATION_ID = createField(DSL.name("conversation_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.message_annotations.message_id</code>.
     */
    public final TableField<MessageAnnotationsRecord, UUID> MESSAGE_ID = createField(DSL.name("message_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.message_annotations.content</code>.
     */
    public final TableField<MessageAnnotationsRecord, String> CONTENT = createField(DSL.name("content"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.message_annotations.account_id</code>.
     */
    public final TableField<MessageAnnotationsRecord, UUID> ACCOUNT_ID = createField(DSL.name("account_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.message_annotations.created_at</code>.
     */
    public final TableField<MessageAnnotationsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.message_annotations.updated_at</code>.
     */
    public final TableField<MessageAnnotationsRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.message_annotations.question</code>.
     */
    public final TableField<MessageAnnotationsRecord, String> QUESTION = createField(DSL.name("question"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.message_annotations.hit_count</code>.
     */
    public final TableField<MessageAnnotationsRecord, Integer> HIT_COUNT = createField(DSL.name("hit_count"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    private MessageAnnotations(Name alias, Table<MessageAnnotationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MessageAnnotations(Name alias, Table<MessageAnnotationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.message_annotations</code> table reference
     */
    public MessageAnnotations(String alias) {
        this(DSL.name(alias), MESSAGE_ANNOTATIONS);
    }

    /**
     * Create an aliased <code>public.message_annotations</code> table reference
     */
    public MessageAnnotations(Name alias) {
        this(alias, MESSAGE_ANNOTATIONS);
    }

    /**
     * Create a <code>public.message_annotations</code> table reference
     */
    public MessageAnnotations() {
        this(DSL.name("message_annotations"), null);
    }

    public <O extends Record> MessageAnnotations(Table<O> child, ForeignKey<O, MessageAnnotationsRecord> key) {
        super(child, key, MESSAGE_ANNOTATIONS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MESSAGE_ANNOTATION_APP_IDX, Indexes.MESSAGE_ANNOTATION_CONVERSATION_IDX, Indexes.MESSAGE_ANNOTATION_MESSAGE_IDX);
    }

    @Override
    public UniqueKey<MessageAnnotationsRecord> getPrimaryKey() {
        return Keys.MESSAGE_ANNOTATION_PKEY;
    }

    @Override
    public List<UniqueKey<MessageAnnotationsRecord>> getKeys() {
        return Arrays.<UniqueKey<MessageAnnotationsRecord>>asList(Keys.MESSAGE_ANNOTATION_PKEY);
    }

    @Override
    public MessageAnnotations as(String alias) {
        return new MessageAnnotations(DSL.name(alias), this);
    }

    @Override
    public MessageAnnotations as(Name alias) {
        return new MessageAnnotations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MessageAnnotations rename(String name) {
        return new MessageAnnotations(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MessageAnnotations rename(Name name) {
        return new MessageAnnotations(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, UUID, UUID, UUID, String, UUID, LocalDateTime, LocalDateTime, String, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
