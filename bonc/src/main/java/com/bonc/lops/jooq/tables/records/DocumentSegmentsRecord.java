/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.records;


import com.bonc.lops.jooq.tables.DocumentSegments;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentSegmentsRecord extends UpdatableRecordImpl<DocumentSegmentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.document_segments.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.document_segments.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.document_segments.tenant_id</code>.
     */
    public void setTenantId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.document_segments.tenant_id</code>.
     */
    public UUID getTenantId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.document_segments.dataset_id</code>.
     */
    public void setDatasetId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.document_segments.dataset_id</code>.
     */
    public UUID getDatasetId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.document_segments.document_id</code>.
     */
    public void setDocumentId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.document_segments.document_id</code>.
     */
    public UUID getDocumentId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.document_segments.position</code>.
     */
    public void setPosition(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.document_segments.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.document_segments.content</code>.
     */
    public void setContent(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.document_segments.content</code>.
     */
    public String getContent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.document_segments.word_count</code>.
     */
    public void setWordCount(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.document_segments.word_count</code>.
     */
    public Integer getWordCount() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.document_segments.tokens</code>.
     */
    public void setTokens(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.document_segments.tokens</code>.
     */
    public Integer getTokens() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.document_segments.keywords</code>.
     */
    public void setKeywords(JSON value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.document_segments.keywords</code>.
     */
    public JSON getKeywords() {
        return (JSON) get(8);
    }

    /**
     * Setter for <code>public.document_segments.index_node_id</code>.
     */
    public void setIndexNodeId(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.document_segments.index_node_id</code>.
     */
    public String getIndexNodeId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.document_segments.index_node_hash</code>.
     */
    public void setIndexNodeHash(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.document_segments.index_node_hash</code>.
     */
    public String getIndexNodeHash() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.document_segments.hit_count</code>.
     */
    public void setHitCount(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.document_segments.hit_count</code>.
     */
    public Integer getHitCount() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>public.document_segments.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.document_segments.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>public.document_segments.disabled_at</code>.
     */
    public void setDisabledAt(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.document_segments.disabled_at</code>.
     */
    public LocalDateTime getDisabledAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>public.document_segments.disabled_by</code>.
     */
    public void setDisabledBy(UUID value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.document_segments.disabled_by</code>.
     */
    public UUID getDisabledBy() {
        return (UUID) get(14);
    }

    /**
     * Setter for <code>public.document_segments.status</code>.
     */
    public void setStatus(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.document_segments.status</code>.
     */
    public String getStatus() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.document_segments.created_by</code>.
     */
    public void setCreatedBy(UUID value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.document_segments.created_by</code>.
     */
    public UUID getCreatedBy() {
        return (UUID) get(16);
    }

    /**
     * Setter for <code>public.document_segments.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(17, value);
    }

    /**
     * Getter for <code>public.document_segments.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>public.document_segments.indexing_at</code>.
     */
    public void setIndexingAt(LocalDateTime value) {
        set(18, value);
    }

    /**
     * Getter for <code>public.document_segments.indexing_at</code>.
     */
    public LocalDateTime getIndexingAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>public.document_segments.completed_at</code>.
     */
    public void setCompletedAt(LocalDateTime value) {
        set(19, value);
    }

    /**
     * Getter for <code>public.document_segments.completed_at</code>.
     */
    public LocalDateTime getCompletedAt() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>public.document_segments.error</code>.
     */
    public void setError(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>public.document_segments.error</code>.
     */
    public String getError() {
        return (String) get(20);
    }

    /**
     * Setter for <code>public.document_segments.stopped_at</code>.
     */
    public void setStoppedAt(LocalDateTime value) {
        set(21, value);
    }

    /**
     * Getter for <code>public.document_segments.stopped_at</code>.
     */
    public LocalDateTime getStoppedAt() {
        return (LocalDateTime) get(21);
    }

    /**
     * Setter for <code>public.document_segments.answer</code>.
     */
    public void setAnswer(String value) {
        set(22, value);
    }

    /**
     * Getter for <code>public.document_segments.answer</code>.
     */
    public String getAnswer() {
        return (String) get(22);
    }

    /**
     * Setter for <code>public.document_segments.updated_by</code>.
     */
    public void setUpdatedBy(UUID value) {
        set(23, value);
    }

    /**
     * Getter for <code>public.document_segments.updated_by</code>.
     */
    public UUID getUpdatedBy() {
        return (UUID) get(23);
    }

    /**
     * Setter for <code>public.document_segments.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(24, value);
    }

    /**
     * Getter for <code>public.document_segments.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DocumentSegmentsRecord
     */
    public DocumentSegmentsRecord() {
        super(DocumentSegments.DOCUMENT_SEGMENTS);
    }

    /**
     * Create a detached, initialised DocumentSegmentsRecord
     */
    public DocumentSegmentsRecord(UUID id, UUID tenantId, UUID datasetId, UUID documentId, Integer position, String content, Integer wordCount, Integer tokens, JSON keywords, String indexNodeId, String indexNodeHash, Integer hitCount, Boolean enabled, LocalDateTime disabledAt, UUID disabledBy, String status, UUID createdBy, LocalDateTime createdAt, LocalDateTime indexingAt, LocalDateTime completedAt, String error, LocalDateTime stoppedAt, String answer, UUID updatedBy, LocalDateTime updatedAt) {
        super(DocumentSegments.DOCUMENT_SEGMENTS);

        setId(id);
        setTenantId(tenantId);
        setDatasetId(datasetId);
        setDocumentId(documentId);
        setPosition(position);
        setContent(content);
        setWordCount(wordCount);
        setTokens(tokens);
        setKeywords(keywords);
        setIndexNodeId(indexNodeId);
        setIndexNodeHash(indexNodeHash);
        setHitCount(hitCount);
        setEnabled(enabled);
        setDisabledAt(disabledAt);
        setDisabledBy(disabledBy);
        setStatus(status);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setIndexingAt(indexingAt);
        setCompletedAt(completedAt);
        setError(error);
        setStoppedAt(stoppedAt);
        setAnswer(answer);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
    }
}
