/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.AppDatasetJoins;
import com.bonc.lops.jooq.tables.records.AppDatasetJoinsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AppDatasetJoinsDao extends DAOImpl<AppDatasetJoinsRecord, com.bonc.lops.jooq.tables.pojos.AppDatasetJoins, UUID> {

    /**
     * Create a new AppDatasetJoinsDao without any configuration
     */
    public AppDatasetJoinsDao() {
        super(AppDatasetJoins.APP_DATASET_JOINS, com.bonc.lops.jooq.tables.pojos.AppDatasetJoins.class);
    }

    /**
     * Create a new AppDatasetJoinsDao with an attached configuration
     */
    @Autowired
    public AppDatasetJoinsDao(Configuration configuration) {
        super(AppDatasetJoins.APP_DATASET_JOINS, com.bonc.lops.jooq.tables.pojos.AppDatasetJoins.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.AppDatasetJoins object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppDatasetJoins> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppDatasetJoins.APP_DATASET_JOINS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppDatasetJoins> fetchById(UUID... values) {
        return fetch(AppDatasetJoins.APP_DATASET_JOINS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.AppDatasetJoins fetchOneById(UUID value) {
        return fetchOne(AppDatasetJoins.APP_DATASET_JOINS.ID, value);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppDatasetJoins> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppDatasetJoins.APP_DATASET_JOINS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppDatasetJoins> fetchByAppId(UUID... values) {
        return fetch(AppDatasetJoins.APP_DATASET_JOINS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>dataset_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppDatasetJoins> fetchRangeOfDatasetId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppDatasetJoins.APP_DATASET_JOINS.DATASET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dataset_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppDatasetJoins> fetchByDatasetId(UUID... values) {
        return fetch(AppDatasetJoins.APP_DATASET_JOINS.DATASET_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppDatasetJoins> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(AppDatasetJoins.APP_DATASET_JOINS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppDatasetJoins> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(AppDatasetJoins.APP_DATASET_JOINS.CREATED_AT, values);
    }
}
