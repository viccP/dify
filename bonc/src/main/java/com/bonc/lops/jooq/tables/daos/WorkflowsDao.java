/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.Workflows;
import com.bonc.lops.jooq.tables.records.WorkflowsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class WorkflowsDao extends DAOImpl<WorkflowsRecord, com.bonc.lops.jooq.tables.pojos.Workflows, UUID> {

    /**
     * Create a new WorkflowsDao without any configuration
     */
    public WorkflowsDao() {
        super(Workflows.WORKFLOWS, com.bonc.lops.jooq.tables.pojos.Workflows.class);
    }

    /**
     * Create a new WorkflowsDao with an attached configuration
     */
    @Autowired
    public WorkflowsDao(Configuration configuration) {
        super(Workflows.WORKFLOWS, com.bonc.lops.jooq.tables.pojos.Workflows.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.Workflows object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchById(UUID... values) {
        return fetch(Workflows.WORKFLOWS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.Workflows fetchOneById(UUID value) {
        return fetchOne(Workflows.WORKFLOWS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByTenantId(UUID... values) {
        return fetch(Workflows.WORKFLOWS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByAppId(UUID... values) {
        return fetch(Workflows.WORKFLOWS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByType(String... values) {
        return fetch(Workflows.WORKFLOWS.TYPE, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfVersion(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByVersion(String... values) {
        return fetch(Workflows.WORKFLOWS.VERSION, values);
    }

    /**
     * Fetch records that have <code>graph BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfGraph(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.GRAPH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>graph IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByGraph(String... values) {
        return fetch(Workflows.WORKFLOWS.GRAPH, values);
    }

    /**
     * Fetch records that have <code>features BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfFeatures(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.FEATURES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>features IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByFeatures(String... values) {
        return fetch(Workflows.WORKFLOWS.FEATURES, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfCreatedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByCreatedBy(UUID... values) {
        return fetch(Workflows.WORKFLOWS.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Workflows.WORKFLOWS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfUpdatedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.UPDATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByUpdatedBy(UUID... values) {
        return fetch(Workflows.WORKFLOWS.UPDATED_BY, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workflows.WORKFLOWS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Workflows> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Workflows.WORKFLOWS.UPDATED_AT, values);
    }
}
