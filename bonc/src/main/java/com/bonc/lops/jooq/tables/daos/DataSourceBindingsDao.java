/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.DataSourceBindings;
import com.bonc.lops.jooq.tables.records.DataSourceBindingsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSONB;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DataSourceBindingsDao extends DAOImpl<DataSourceBindingsRecord, com.bonc.lops.jooq.tables.pojos.DataSourceBindings, UUID> {

    /**
     * Create a new DataSourceBindingsDao without any configuration
     */
    public DataSourceBindingsDao() {
        super(DataSourceBindings.DATA_SOURCE_BINDINGS, com.bonc.lops.jooq.tables.pojos.DataSourceBindings.class);
    }

    /**
     * Create a new DataSourceBindingsDao with an attached configuration
     */
    @Autowired
    public DataSourceBindingsDao(Configuration configuration) {
        super(DataSourceBindings.DATA_SOURCE_BINDINGS, com.bonc.lops.jooq.tables.pojos.DataSourceBindings.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.DataSourceBindings object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(DataSourceBindings.DATA_SOURCE_BINDINGS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchById(UUID... values) {
        return fetch(DataSourceBindings.DATA_SOURCE_BINDINGS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.DataSourceBindings fetchOneById(UUID value) {
        return fetchOne(DataSourceBindings.DATA_SOURCE_BINDINGS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(DataSourceBindings.DATA_SOURCE_BINDINGS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchByTenantId(UUID... values) {
        return fetch(DataSourceBindings.DATA_SOURCE_BINDINGS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>access_token BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchRangeOfAccessToken(String lowerInclusive, String upperInclusive) {
        return fetchRange(DataSourceBindings.DATA_SOURCE_BINDINGS.ACCESS_TOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>access_token IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchByAccessToken(String... values) {
        return fetch(DataSourceBindings.DATA_SOURCE_BINDINGS.ACCESS_TOKEN, values);
    }

    /**
     * Fetch records that have <code>provider BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchRangeOfProvider(String lowerInclusive, String upperInclusive) {
        return fetchRange(DataSourceBindings.DATA_SOURCE_BINDINGS.PROVIDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>provider IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchByProvider(String... values) {
        return fetch(DataSourceBindings.DATA_SOURCE_BINDINGS.PROVIDER, values);
    }

    /**
     * Fetch records that have <code>source_info BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchRangeOfSourceInfo(JSONB lowerInclusive, JSONB upperInclusive) {
        return fetchRange(DataSourceBindings.DATA_SOURCE_BINDINGS.SOURCE_INFO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source_info IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchBySourceInfo(JSONB... values) {
        return fetch(DataSourceBindings.DATA_SOURCE_BINDINGS.SOURCE_INFO, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(DataSourceBindings.DATA_SOURCE_BINDINGS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(DataSourceBindings.DATA_SOURCE_BINDINGS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(DataSourceBindings.DATA_SOURCE_BINDINGS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(DataSourceBindings.DATA_SOURCE_BINDINGS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>disabled BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchRangeOfDisabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(DataSourceBindings.DATA_SOURCE_BINDINGS.DISABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>disabled IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DataSourceBindings> fetchByDisabled(Boolean... values) {
        return fetch(DataSourceBindings.DATA_SOURCE_BINDINGS.DISABLED, values);
    }
}
