/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.Messages;
import com.bonc.lops.jooq.tables.records.MessagesRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MessagesDao extends DAOImpl<MessagesRecord, com.bonc.lops.jooq.tables.pojos.Messages, UUID> {

    /**
     * Create a new MessagesDao without any configuration
     */
    public MessagesDao() {
        super(Messages.MESSAGES, com.bonc.lops.jooq.tables.pojos.Messages.class);
    }

    /**
     * Create a new MessagesDao with an attached configuration
     */
    @Autowired
    public MessagesDao(Configuration configuration) {
        super(Messages.MESSAGES, com.bonc.lops.jooq.tables.pojos.Messages.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.Messages object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Messages.MESSAGES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchById(UUID... values) {
        return fetch(Messages.MESSAGES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.Messages fetchOneById(UUID value) {
        return fetchOne(Messages.MESSAGES.ID, value);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Messages.MESSAGES.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByAppId(UUID... values) {
        return fetch(Messages.MESSAGES.APP_ID, values);
    }

    /**
     * Fetch records that have <code>model_provider BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfModelProvider(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.MODEL_PROVIDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_provider IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByModelProvider(String... values) {
        return fetch(Messages.MESSAGES.MODEL_PROVIDER, values);
    }

    /**
     * Fetch records that have <code>model_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfModelId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.MODEL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByModelId(String... values) {
        return fetch(Messages.MESSAGES.MODEL_ID, values);
    }

    /**
     * Fetch records that have <code>override_model_configs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfOverrideModelConfigs(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.OVERRIDE_MODEL_CONFIGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>override_model_configs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByOverrideModelConfigs(String... values) {
        return fetch(Messages.MESSAGES.OVERRIDE_MODEL_CONFIGS, values);
    }

    /**
     * Fetch records that have <code>conversation_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfConversationId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Messages.MESSAGES.CONVERSATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>conversation_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByConversationId(UUID... values) {
        return fetch(Messages.MESSAGES.CONVERSATION_ID, values);
    }

    /**
     * Fetch records that have <code>inputs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfInputs(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(Messages.MESSAGES.INPUTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inputs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByInputs(JSON... values) {
        return fetch(Messages.MESSAGES.INPUTS, values);
    }

    /**
     * Fetch records that have <code>query BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfQuery(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.QUERY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>query IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByQuery(String... values) {
        return fetch(Messages.MESSAGES.QUERY, values);
    }

    /**
     * Fetch records that have <code>message BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfMessage(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(Messages.MESSAGES.MESSAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByMessage(JSON... values) {
        return fetch(Messages.MESSAGES.MESSAGE, values);
    }

    /**
     * Fetch records that have <code>message_tokens BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfMessageTokens(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Messages.MESSAGES.MESSAGE_TOKENS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message_tokens IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByMessageTokens(Integer... values) {
        return fetch(Messages.MESSAGES.MESSAGE_TOKENS, values);
    }

    /**
     * Fetch records that have <code>message_unit_price BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfMessageUnitPrice(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Messages.MESSAGES.MESSAGE_UNIT_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message_unit_price IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByMessageUnitPrice(BigDecimal... values) {
        return fetch(Messages.MESSAGES.MESSAGE_UNIT_PRICE, values);
    }

    /**
     * Fetch records that have <code>answer BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfAnswer(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.ANSWER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>answer IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByAnswer(String... values) {
        return fetch(Messages.MESSAGES.ANSWER, values);
    }

    /**
     * Fetch records that have <code>answer_tokens BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfAnswerTokens(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Messages.MESSAGES.ANSWER_TOKENS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>answer_tokens IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByAnswerTokens(Integer... values) {
        return fetch(Messages.MESSAGES.ANSWER_TOKENS, values);
    }

    /**
     * Fetch records that have <code>answer_unit_price BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfAnswerUnitPrice(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Messages.MESSAGES.ANSWER_UNIT_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>answer_unit_price IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByAnswerUnitPrice(BigDecimal... values) {
        return fetch(Messages.MESSAGES.ANSWER_UNIT_PRICE, values);
    }

    /**
     * Fetch records that have <code>provider_response_latency BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfProviderResponseLatency(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Messages.MESSAGES.PROVIDER_RESPONSE_LATENCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>provider_response_latency IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByProviderResponseLatency(Double... values) {
        return fetch(Messages.MESSAGES.PROVIDER_RESPONSE_LATENCY, values);
    }

    /**
     * Fetch records that have <code>total_price BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfTotalPrice(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Messages.MESSAGES.TOTAL_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_price IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByTotalPrice(BigDecimal... values) {
        return fetch(Messages.MESSAGES.TOTAL_PRICE, values);
    }

    /**
     * Fetch records that have <code>currency BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfCurrency(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.CURRENCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>currency IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByCurrency(String... values) {
        return fetch(Messages.MESSAGES.CURRENCY, values);
    }

    /**
     * Fetch records that have <code>from_source BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfFromSource(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.FROM_SOURCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>from_source IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByFromSource(String... values) {
        return fetch(Messages.MESSAGES.FROM_SOURCE, values);
    }

    /**
     * Fetch records that have <code>from_end_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfFromEndUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Messages.MESSAGES.FROM_END_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>from_end_user_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByFromEndUserId(UUID... values) {
        return fetch(Messages.MESSAGES.FROM_END_USER_ID, values);
    }

    /**
     * Fetch records that have <code>from_account_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfFromAccountId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Messages.MESSAGES.FROM_ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>from_account_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByFromAccountId(UUID... values) {
        return fetch(Messages.MESSAGES.FROM_ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Messages.MESSAGES.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Messages.MESSAGES.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Messages.MESSAGES.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Messages.MESSAGES.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>agent_based BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfAgentBased(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Messages.MESSAGES.AGENT_BASED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>agent_based IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByAgentBased(Boolean... values) {
        return fetch(Messages.MESSAGES.AGENT_BASED, values);
    }

    /**
     * Fetch records that have <code>message_price_unit BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfMessagePriceUnit(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Messages.MESSAGES.MESSAGE_PRICE_UNIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message_price_unit IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByMessagePriceUnit(BigDecimal... values) {
        return fetch(Messages.MESSAGES.MESSAGE_PRICE_UNIT, values);
    }

    /**
     * Fetch records that have <code>answer_price_unit BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfAnswerPriceUnit(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Messages.MESSAGES.ANSWER_PRICE_UNIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>answer_price_unit IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByAnswerPriceUnit(BigDecimal... values) {
        return fetch(Messages.MESSAGES.ANSWER_PRICE_UNIT, values);
    }

    /**
     * Fetch records that have <code>workflow_run_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfWorkflowRunId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Messages.MESSAGES.WORKFLOW_RUN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workflow_run_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByWorkflowRunId(UUID... values) {
        return fetch(Messages.MESSAGES.WORKFLOW_RUN_ID, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByStatus(String... values) {
        return fetch(Messages.MESSAGES.STATUS, values);
    }

    /**
     * Fetch records that have <code>error BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfError(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.ERROR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>error IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByError(String... values) {
        return fetch(Messages.MESSAGES.ERROR, values);
    }

    /**
     * Fetch records that have <code>message_metadata BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfMessageMetadata(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.MESSAGE_METADATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message_metadata IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByMessageMetadata(String... values) {
        return fetch(Messages.MESSAGES.MESSAGE_METADATA, values);
    }

    /**
     * Fetch records that have <code>invoke_from BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchRangeOfInvokeFrom(String lowerInclusive, String upperInclusive) {
        return fetchRange(Messages.MESSAGES.INVOKE_FROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>invoke_from IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Messages> fetchByInvokeFrom(String... values) {
        return fetch(Messages.MESSAGES.INVOKE_FROM, values);
    }
}
