/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.JSON;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Documents implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID          id;
    private UUID          tenantId;
    private UUID          datasetId;
    private Integer       position;
    private String        dataSourceType;
    private String        dataSourceInfo;
    private UUID          datasetProcessRuleId;
    private String        batch;
    private String        name;
    private String        createdFrom;
    private UUID          createdBy;
    private UUID          createdApiRequestId;
    private LocalDateTime createdAt;
    private LocalDateTime processingStartedAt;
    private String        fileId;
    private Integer       wordCount;
    private LocalDateTime parsingCompletedAt;
    private LocalDateTime cleaningCompletedAt;
    private LocalDateTime splittingCompletedAt;
    private Integer       tokens;
    private Double        indexingLatency;
    private LocalDateTime completedAt;
    private Boolean       isPaused;
    private UUID          pausedBy;
    private LocalDateTime pausedAt;
    private String        error;
    private LocalDateTime stoppedAt;
    private String        indexingStatus;
    private Boolean       enabled;
    private LocalDateTime disabledAt;
    private UUID          disabledBy;
    private Boolean       archived;
    private String        archivedReason;
    private UUID          archivedBy;
    private LocalDateTime archivedAt;
    private LocalDateTime updatedAt;
    private String        docType;
    private JSON          docMetadata;
    private String        docForm;
    private String        docLanguage;

    public Documents() {}

    public Documents(Documents value) {
        this.id = value.id;
        this.tenantId = value.tenantId;
        this.datasetId = value.datasetId;
        this.position = value.position;
        this.dataSourceType = value.dataSourceType;
        this.dataSourceInfo = value.dataSourceInfo;
        this.datasetProcessRuleId = value.datasetProcessRuleId;
        this.batch = value.batch;
        this.name = value.name;
        this.createdFrom = value.createdFrom;
        this.createdBy = value.createdBy;
        this.createdApiRequestId = value.createdApiRequestId;
        this.createdAt = value.createdAt;
        this.processingStartedAt = value.processingStartedAt;
        this.fileId = value.fileId;
        this.wordCount = value.wordCount;
        this.parsingCompletedAt = value.parsingCompletedAt;
        this.cleaningCompletedAt = value.cleaningCompletedAt;
        this.splittingCompletedAt = value.splittingCompletedAt;
        this.tokens = value.tokens;
        this.indexingLatency = value.indexingLatency;
        this.completedAt = value.completedAt;
        this.isPaused = value.isPaused;
        this.pausedBy = value.pausedBy;
        this.pausedAt = value.pausedAt;
        this.error = value.error;
        this.stoppedAt = value.stoppedAt;
        this.indexingStatus = value.indexingStatus;
        this.enabled = value.enabled;
        this.disabledAt = value.disabledAt;
        this.disabledBy = value.disabledBy;
        this.archived = value.archived;
        this.archivedReason = value.archivedReason;
        this.archivedBy = value.archivedBy;
        this.archivedAt = value.archivedAt;
        this.updatedAt = value.updatedAt;
        this.docType = value.docType;
        this.docMetadata = value.docMetadata;
        this.docForm = value.docForm;
        this.docLanguage = value.docLanguage;
    }

    public Documents(
        UUID          id,
        UUID          tenantId,
        UUID          datasetId,
        Integer       position,
        String        dataSourceType,
        String        dataSourceInfo,
        UUID          datasetProcessRuleId,
        String        batch,
        String        name,
        String        createdFrom,
        UUID          createdBy,
        UUID          createdApiRequestId,
        LocalDateTime createdAt,
        LocalDateTime processingStartedAt,
        String        fileId,
        Integer       wordCount,
        LocalDateTime parsingCompletedAt,
        LocalDateTime cleaningCompletedAt,
        LocalDateTime splittingCompletedAt,
        Integer       tokens,
        Double        indexingLatency,
        LocalDateTime completedAt,
        Boolean       isPaused,
        UUID          pausedBy,
        LocalDateTime pausedAt,
        String        error,
        LocalDateTime stoppedAt,
        String        indexingStatus,
        Boolean       enabled,
        LocalDateTime disabledAt,
        UUID          disabledBy,
        Boolean       archived,
        String        archivedReason,
        UUID          archivedBy,
        LocalDateTime archivedAt,
        LocalDateTime updatedAt,
        String        docType,
        JSON          docMetadata,
        String        docForm,
        String        docLanguage
    ) {
        this.id = id;
        this.tenantId = tenantId;
        this.datasetId = datasetId;
        this.position = position;
        this.dataSourceType = dataSourceType;
        this.dataSourceInfo = dataSourceInfo;
        this.datasetProcessRuleId = datasetProcessRuleId;
        this.batch = batch;
        this.name = name;
        this.createdFrom = createdFrom;
        this.createdBy = createdBy;
        this.createdApiRequestId = createdApiRequestId;
        this.createdAt = createdAt;
        this.processingStartedAt = processingStartedAt;
        this.fileId = fileId;
        this.wordCount = wordCount;
        this.parsingCompletedAt = parsingCompletedAt;
        this.cleaningCompletedAt = cleaningCompletedAt;
        this.splittingCompletedAt = splittingCompletedAt;
        this.tokens = tokens;
        this.indexingLatency = indexingLatency;
        this.completedAt = completedAt;
        this.isPaused = isPaused;
        this.pausedBy = pausedBy;
        this.pausedAt = pausedAt;
        this.error = error;
        this.stoppedAt = stoppedAt;
        this.indexingStatus = indexingStatus;
        this.enabled = enabled;
        this.disabledAt = disabledAt;
        this.disabledBy = disabledBy;
        this.archived = archived;
        this.archivedReason = archivedReason;
        this.archivedBy = archivedBy;
        this.archivedAt = archivedAt;
        this.updatedAt = updatedAt;
        this.docType = docType;
        this.docMetadata = docMetadata;
        this.docForm = docForm;
        this.docLanguage = docLanguage;
    }

    /**
     * Getter for <code>public.documents.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.documents.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.documents.tenant_id</code>.
     */
    public UUID getTenantId() {
        return this.tenantId;
    }

    /**
     * Setter for <code>public.documents.tenant_id</code>.
     */
    public void setTenantId(UUID tenantId) {
        this.tenantId = tenantId;
    }

    /**
     * Getter for <code>public.documents.dataset_id</code>.
     */
    public UUID getDatasetId() {
        return this.datasetId;
    }

    /**
     * Setter for <code>public.documents.dataset_id</code>.
     */
    public void setDatasetId(UUID datasetId) {
        this.datasetId = datasetId;
    }

    /**
     * Getter for <code>public.documents.position</code>.
     */
    public Integer getPosition() {
        return this.position;
    }

    /**
     * Setter for <code>public.documents.position</code>.
     */
    public void setPosition(Integer position) {
        this.position = position;
    }

    /**
     * Getter for <code>public.documents.data_source_type</code>.
     */
    public String getDataSourceType() {
        return this.dataSourceType;
    }

    /**
     * Setter for <code>public.documents.data_source_type</code>.
     */
    public void setDataSourceType(String dataSourceType) {
        this.dataSourceType = dataSourceType;
    }

    /**
     * Getter for <code>public.documents.data_source_info</code>.
     */
    public String getDataSourceInfo() {
        return this.dataSourceInfo;
    }

    /**
     * Setter for <code>public.documents.data_source_info</code>.
     */
    public void setDataSourceInfo(String dataSourceInfo) {
        this.dataSourceInfo = dataSourceInfo;
    }

    /**
     * Getter for <code>public.documents.dataset_process_rule_id</code>.
     */
    public UUID getDatasetProcessRuleId() {
        return this.datasetProcessRuleId;
    }

    /**
     * Setter for <code>public.documents.dataset_process_rule_id</code>.
     */
    public void setDatasetProcessRuleId(UUID datasetProcessRuleId) {
        this.datasetProcessRuleId = datasetProcessRuleId;
    }

    /**
     * Getter for <code>public.documents.batch</code>.
     */
    public String getBatch() {
        return this.batch;
    }

    /**
     * Setter for <code>public.documents.batch</code>.
     */
    public void setBatch(String batch) {
        this.batch = batch;
    }

    /**
     * Getter for <code>public.documents.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.documents.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.documents.created_from</code>.
     */
    public String getCreatedFrom() {
        return this.createdFrom;
    }

    /**
     * Setter for <code>public.documents.created_from</code>.
     */
    public void setCreatedFrom(String createdFrom) {
        this.createdFrom = createdFrom;
    }

    /**
     * Getter for <code>public.documents.created_by</code>.
     */
    public UUID getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>public.documents.created_by</code>.
     */
    public void setCreatedBy(UUID createdBy) {
        this.createdBy = createdBy;
    }

    /**
     * Getter for <code>public.documents.created_api_request_id</code>.
     */
    public UUID getCreatedApiRequestId() {
        return this.createdApiRequestId;
    }

    /**
     * Setter for <code>public.documents.created_api_request_id</code>.
     */
    public void setCreatedApiRequestId(UUID createdApiRequestId) {
        this.createdApiRequestId = createdApiRequestId;
    }

    /**
     * Getter for <code>public.documents.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.documents.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.documents.processing_started_at</code>.
     */
    public LocalDateTime getProcessingStartedAt() {
        return this.processingStartedAt;
    }

    /**
     * Setter for <code>public.documents.processing_started_at</code>.
     */
    public void setProcessingStartedAt(LocalDateTime processingStartedAt) {
        this.processingStartedAt = processingStartedAt;
    }

    /**
     * Getter for <code>public.documents.file_id</code>.
     */
    public String getFileId() {
        return this.fileId;
    }

    /**
     * Setter for <code>public.documents.file_id</code>.
     */
    public void setFileId(String fileId) {
        this.fileId = fileId;
    }

    /**
     * Getter for <code>public.documents.word_count</code>.
     */
    public Integer getWordCount() {
        return this.wordCount;
    }

    /**
     * Setter for <code>public.documents.word_count</code>.
     */
    public void setWordCount(Integer wordCount) {
        this.wordCount = wordCount;
    }

    /**
     * Getter for <code>public.documents.parsing_completed_at</code>.
     */
    public LocalDateTime getParsingCompletedAt() {
        return this.parsingCompletedAt;
    }

    /**
     * Setter for <code>public.documents.parsing_completed_at</code>.
     */
    public void setParsingCompletedAt(LocalDateTime parsingCompletedAt) {
        this.parsingCompletedAt = parsingCompletedAt;
    }

    /**
     * Getter for <code>public.documents.cleaning_completed_at</code>.
     */
    public LocalDateTime getCleaningCompletedAt() {
        return this.cleaningCompletedAt;
    }

    /**
     * Setter for <code>public.documents.cleaning_completed_at</code>.
     */
    public void setCleaningCompletedAt(LocalDateTime cleaningCompletedAt) {
        this.cleaningCompletedAt = cleaningCompletedAt;
    }

    /**
     * Getter for <code>public.documents.splitting_completed_at</code>.
     */
    public LocalDateTime getSplittingCompletedAt() {
        return this.splittingCompletedAt;
    }

    /**
     * Setter for <code>public.documents.splitting_completed_at</code>.
     */
    public void setSplittingCompletedAt(LocalDateTime splittingCompletedAt) {
        this.splittingCompletedAt = splittingCompletedAt;
    }

    /**
     * Getter for <code>public.documents.tokens</code>.
     */
    public Integer getTokens() {
        return this.tokens;
    }

    /**
     * Setter for <code>public.documents.tokens</code>.
     */
    public void setTokens(Integer tokens) {
        this.tokens = tokens;
    }

    /**
     * Getter for <code>public.documents.indexing_latency</code>.
     */
    public Double getIndexingLatency() {
        return this.indexingLatency;
    }

    /**
     * Setter for <code>public.documents.indexing_latency</code>.
     */
    public void setIndexingLatency(Double indexingLatency) {
        this.indexingLatency = indexingLatency;
    }

    /**
     * Getter for <code>public.documents.completed_at</code>.
     */
    public LocalDateTime getCompletedAt() {
        return this.completedAt;
    }

    /**
     * Setter for <code>public.documents.completed_at</code>.
     */
    public void setCompletedAt(LocalDateTime completedAt) {
        this.completedAt = completedAt;
    }

    /**
     * Getter for <code>public.documents.is_paused</code>.
     */
    public Boolean getIsPaused() {
        return this.isPaused;
    }

    /**
     * Setter for <code>public.documents.is_paused</code>.
     */
    public void setIsPaused(Boolean isPaused) {
        this.isPaused = isPaused;
    }

    /**
     * Getter for <code>public.documents.paused_by</code>.
     */
    public UUID getPausedBy() {
        return this.pausedBy;
    }

    /**
     * Setter for <code>public.documents.paused_by</code>.
     */
    public void setPausedBy(UUID pausedBy) {
        this.pausedBy = pausedBy;
    }

    /**
     * Getter for <code>public.documents.paused_at</code>.
     */
    public LocalDateTime getPausedAt() {
        return this.pausedAt;
    }

    /**
     * Setter for <code>public.documents.paused_at</code>.
     */
    public void setPausedAt(LocalDateTime pausedAt) {
        this.pausedAt = pausedAt;
    }

    /**
     * Getter for <code>public.documents.error</code>.
     */
    public String getError() {
        return this.error;
    }

    /**
     * Setter for <code>public.documents.error</code>.
     */
    public void setError(String error) {
        this.error = error;
    }

    /**
     * Getter for <code>public.documents.stopped_at</code>.
     */
    public LocalDateTime getStoppedAt() {
        return this.stoppedAt;
    }

    /**
     * Setter for <code>public.documents.stopped_at</code>.
     */
    public void setStoppedAt(LocalDateTime stoppedAt) {
        this.stoppedAt = stoppedAt;
    }

    /**
     * Getter for <code>public.documents.indexing_status</code>.
     */
    public String getIndexingStatus() {
        return this.indexingStatus;
    }

    /**
     * Setter for <code>public.documents.indexing_status</code>.
     */
    public void setIndexingStatus(String indexingStatus) {
        this.indexingStatus = indexingStatus;
    }

    /**
     * Getter for <code>public.documents.enabled</code>.
     */
    public Boolean getEnabled() {
        return this.enabled;
    }

    /**
     * Setter for <code>public.documents.enabled</code>.
     */
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    /**
     * Getter for <code>public.documents.disabled_at</code>.
     */
    public LocalDateTime getDisabledAt() {
        return this.disabledAt;
    }

    /**
     * Setter for <code>public.documents.disabled_at</code>.
     */
    public void setDisabledAt(LocalDateTime disabledAt) {
        this.disabledAt = disabledAt;
    }

    /**
     * Getter for <code>public.documents.disabled_by</code>.
     */
    public UUID getDisabledBy() {
        return this.disabledBy;
    }

    /**
     * Setter for <code>public.documents.disabled_by</code>.
     */
    public void setDisabledBy(UUID disabledBy) {
        this.disabledBy = disabledBy;
    }

    /**
     * Getter for <code>public.documents.archived</code>.
     */
    public Boolean getArchived() {
        return this.archived;
    }

    /**
     * Setter for <code>public.documents.archived</code>.
     */
    public void setArchived(Boolean archived) {
        this.archived = archived;
    }

    /**
     * Getter for <code>public.documents.archived_reason</code>.
     */
    public String getArchivedReason() {
        return this.archivedReason;
    }

    /**
     * Setter for <code>public.documents.archived_reason</code>.
     */
    public void setArchivedReason(String archivedReason) {
        this.archivedReason = archivedReason;
    }

    /**
     * Getter for <code>public.documents.archived_by</code>.
     */
    public UUID getArchivedBy() {
        return this.archivedBy;
    }

    /**
     * Setter for <code>public.documents.archived_by</code>.
     */
    public void setArchivedBy(UUID archivedBy) {
        this.archivedBy = archivedBy;
    }

    /**
     * Getter for <code>public.documents.archived_at</code>.
     */
    public LocalDateTime getArchivedAt() {
        return this.archivedAt;
    }

    /**
     * Setter for <code>public.documents.archived_at</code>.
     */
    public void setArchivedAt(LocalDateTime archivedAt) {
        this.archivedAt = archivedAt;
    }

    /**
     * Getter for <code>public.documents.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.documents.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.documents.doc_type</code>.
     */
    public String getDocType() {
        return this.docType;
    }

    /**
     * Setter for <code>public.documents.doc_type</code>.
     */
    public void setDocType(String docType) {
        this.docType = docType;
    }

    /**
     * Getter for <code>public.documents.doc_metadata</code>.
     */
    public JSON getDocMetadata() {
        return this.docMetadata;
    }

    /**
     * Setter for <code>public.documents.doc_metadata</code>.
     */
    public void setDocMetadata(JSON docMetadata) {
        this.docMetadata = docMetadata;
    }

    /**
     * Getter for <code>public.documents.doc_form</code>.
     */
    public String getDocForm() {
        return this.docForm;
    }

    /**
     * Setter for <code>public.documents.doc_form</code>.
     */
    public void setDocForm(String docForm) {
        this.docForm = docForm;
    }

    /**
     * Getter for <code>public.documents.doc_language</code>.
     */
    public String getDocLanguage() {
        return this.docLanguage;
    }

    /**
     * Setter for <code>public.documents.doc_language</code>.
     */
    public void setDocLanguage(String docLanguage) {
        this.docLanguage = docLanguage;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Documents (");

        sb.append(id);
        sb.append(", ").append(tenantId);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(position);
        sb.append(", ").append(dataSourceType);
        sb.append(", ").append(dataSourceInfo);
        sb.append(", ").append(datasetProcessRuleId);
        sb.append(", ").append(batch);
        sb.append(", ").append(name);
        sb.append(", ").append(createdFrom);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(createdApiRequestId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(processingStartedAt);
        sb.append(", ").append(fileId);
        sb.append(", ").append(wordCount);
        sb.append(", ").append(parsingCompletedAt);
        sb.append(", ").append(cleaningCompletedAt);
        sb.append(", ").append(splittingCompletedAt);
        sb.append(", ").append(tokens);
        sb.append(", ").append(indexingLatency);
        sb.append(", ").append(completedAt);
        sb.append(", ").append(isPaused);
        sb.append(", ").append(pausedBy);
        sb.append(", ").append(pausedAt);
        sb.append(", ").append(error);
        sb.append(", ").append(stoppedAt);
        sb.append(", ").append(indexingStatus);
        sb.append(", ").append(enabled);
        sb.append(", ").append(disabledAt);
        sb.append(", ").append(disabledBy);
        sb.append(", ").append(archived);
        sb.append(", ").append(archivedReason);
        sb.append(", ").append(archivedBy);
        sb.append(", ").append(archivedAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(docType);
        sb.append(", ").append(docMetadata);
        sb.append(", ").append(docForm);
        sb.append(", ").append(docLanguage);

        sb.append(")");
        return sb.toString();
    }
}
