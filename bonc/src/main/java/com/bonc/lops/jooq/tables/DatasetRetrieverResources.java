/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables;


import com.bonc.lops.jooq.Indexes;
import com.bonc.lops.jooq.Keys;
import com.bonc.lops.jooq.Public;
import com.bonc.lops.jooq.tables.records.DatasetRetrieverResourcesRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatasetRetrieverResources extends TableImpl<DatasetRetrieverResourcesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.dataset_retriever_resources</code>
     */
    public static final DatasetRetrieverResources DATASET_RETRIEVER_RESOURCES = new DatasetRetrieverResources();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DatasetRetrieverResourcesRecord> getRecordType() {
        return DatasetRetrieverResourcesRecord.class;
    }

    /**
     * The column <code>public.dataset_retriever_resources.id</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("uuid_generate_v4()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.message_id</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, UUID> MESSAGE_ID = createField(DSL.name("message_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.position</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, Integer> POSITION = createField(DSL.name("position"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.dataset_id</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, UUID> DATASET_ID = createField(DSL.name("dataset_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.dataset_name</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, String> DATASET_NAME = createField(DSL.name("dataset_name"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.document_id</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, UUID> DOCUMENT_ID = createField(DSL.name("document_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.document_name</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, String> DOCUMENT_NAME = createField(DSL.name("document_name"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.data_source_type</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, String> DATA_SOURCE_TYPE = createField(DSL.name("data_source_type"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.segment_id</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, UUID> SEGMENT_ID = createField(DSL.name("segment_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.score</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, Double> SCORE = createField(DSL.name("score"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.dataset_retriever_resources.content</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, String> CONTENT = createField(DSL.name("content"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.hit_count</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, Integer> HIT_COUNT = createField(DSL.name("hit_count"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.dataset_retriever_resources.word_count</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, Integer> WORD_COUNT = createField(DSL.name("word_count"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.dataset_retriever_resources.segment_position</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, Integer> SEGMENT_POSITION = createField(DSL.name("segment_position"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.dataset_retriever_resources.index_node_hash</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, String> INDEX_NODE_HASH = createField(DSL.name("index_node_hash"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.dataset_retriever_resources.retriever_from</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, String> RETRIEVER_FROM = createField(DSL.name("retriever_from"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.created_by</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, UUID> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.dataset_retriever_resources.created_at</code>.
     */
    public final TableField<DatasetRetrieverResourcesRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private DatasetRetrieverResources(Name alias, Table<DatasetRetrieverResourcesRecord> aliased) {
        this(alias, aliased, null);
    }

    private DatasetRetrieverResources(Name alias, Table<DatasetRetrieverResourcesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.dataset_retriever_resources</code> table reference
     */
    public DatasetRetrieverResources(String alias) {
        this(DSL.name(alias), DATASET_RETRIEVER_RESOURCES);
    }

    /**
     * Create an aliased <code>public.dataset_retriever_resources</code> table reference
     */
    public DatasetRetrieverResources(Name alias) {
        this(alias, DATASET_RETRIEVER_RESOURCES);
    }

    /**
     * Create a <code>public.dataset_retriever_resources</code> table reference
     */
    public DatasetRetrieverResources() {
        this(DSL.name("dataset_retriever_resources"), null);
    }

    public <O extends Record> DatasetRetrieverResources(Table<O> child, ForeignKey<O, DatasetRetrieverResourcesRecord> key) {
        super(child, key, DATASET_RETRIEVER_RESOURCES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DATASET_RETRIEVER_RESOURCE_MESSAGE_ID_IDX);
    }

    @Override
    public UniqueKey<DatasetRetrieverResourcesRecord> getPrimaryKey() {
        return Keys.DATASET_RETRIEVER_RESOURCE_PKEY;
    }

    @Override
    public List<UniqueKey<DatasetRetrieverResourcesRecord>> getKeys() {
        return Arrays.<UniqueKey<DatasetRetrieverResourcesRecord>>asList(Keys.DATASET_RETRIEVER_RESOURCE_PKEY);
    }

    @Override
    public DatasetRetrieverResources as(String alias) {
        return new DatasetRetrieverResources(DSL.name(alias), this);
    }

    @Override
    public DatasetRetrieverResources as(Name alias) {
        return new DatasetRetrieverResources(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DatasetRetrieverResources rename(String name) {
        return new DatasetRetrieverResources(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DatasetRetrieverResources rename(Name name) {
        return new DatasetRetrieverResources(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<UUID, UUID, Integer, UUID, String, UUID, String, String, UUID, Double, String, Integer, Integer, Integer, String, String, UUID, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
