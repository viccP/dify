/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.Embeddings;
import com.bonc.lops.jooq.tables.records.EmbeddingsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class EmbeddingsDao extends DAOImpl<EmbeddingsRecord, com.bonc.lops.jooq.tables.pojos.Embeddings, UUID> {

    /**
     * Create a new EmbeddingsDao without any configuration
     */
    public EmbeddingsDao() {
        super(Embeddings.EMBEDDINGS, com.bonc.lops.jooq.tables.pojos.Embeddings.class);
    }

    /**
     * Create a new EmbeddingsDao with an attached configuration
     */
    @Autowired
    public EmbeddingsDao(Configuration configuration) {
        super(Embeddings.EMBEDDINGS, com.bonc.lops.jooq.tables.pojos.Embeddings.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.Embeddings object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Embeddings.EMBEDDINGS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchById(UUID... values) {
        return fetch(Embeddings.EMBEDDINGS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.Embeddings fetchOneById(UUID value) {
        return fetchOne(Embeddings.EMBEDDINGS.ID, value);
    }

    /**
     * Fetch records that have <code>hash BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchRangeOfHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Embeddings.EMBEDDINGS.HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchByHash(String... values) {
        return fetch(Embeddings.EMBEDDINGS.HASH, values);
    }

    /**
     * Fetch records that have <code>embedding BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchRangeOfEmbedding(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(Embeddings.EMBEDDINGS.EMBEDDING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>embedding IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchByEmbedding(byte[]... values) {
        return fetch(Embeddings.EMBEDDINGS.EMBEDDING, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Embeddings.EMBEDDINGS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Embeddings.EMBEDDINGS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>model_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchRangeOfModelName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Embeddings.EMBEDDINGS.MODEL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Embeddings> fetchByModelName(String... values) {
        return fetch(Embeddings.EMBEDDINGS.MODEL_NAME, values);
    }
}
