/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables;


import com.bonc.lops.jooq.Indexes;
import com.bonc.lops.jooq.Keys;
import com.bonc.lops.jooq.Public;
import com.bonc.lops.jooq.tables.records.AppModelConfigsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppModelConfigs extends TableImpl<AppModelConfigsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.app_model_configs</code>
     */
    public static final AppModelConfigs APP_MODEL_CONFIGS = new AppModelConfigs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AppModelConfigsRecord> getRecordType() {
        return AppModelConfigsRecord.class;
    }

    /**
     * The column <code>public.app_model_configs.id</code>.
     */
    public final TableField<AppModelConfigsRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("uuid_generate_v4()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.app_model_configs.app_id</code>.
     */
    public final TableField<AppModelConfigsRecord, UUID> APP_ID = createField(DSL.name("app_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.app_model_configs.provider</code>.
     */
    public final TableField<AppModelConfigsRecord, String> PROVIDER = createField(DSL.name("provider"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.app_model_configs.model_id</code>.
     */
    public final TableField<AppModelConfigsRecord, String> MODEL_ID = createField(DSL.name("model_id"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.app_model_configs.configs</code>.
     */
    public final TableField<AppModelConfigsRecord, JSON> CONFIGS = createField(DSL.name("configs"), SQLDataType.JSON, this, "");

    /**
     * The column <code>public.app_model_configs.created_at</code>.
     */
    public final TableField<AppModelConfigsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.app_model_configs.updated_at</code>.
     */
    public final TableField<AppModelConfigsRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.app_model_configs.opening_statement</code>.
     */
    public final TableField<AppModelConfigsRecord, String> OPENING_STATEMENT = createField(DSL.name("opening_statement"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.suggested_questions</code>.
     */
    public final TableField<AppModelConfigsRecord, String> SUGGESTED_QUESTIONS = createField(DSL.name("suggested_questions"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.suggested_questions_after_answer</code>.
     */
    public final TableField<AppModelConfigsRecord, String> SUGGESTED_QUESTIONS_AFTER_ANSWER = createField(DSL.name("suggested_questions_after_answer"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.more_like_this</code>.
     */
    public final TableField<AppModelConfigsRecord, String> MORE_LIKE_THIS = createField(DSL.name("more_like_this"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.model</code>.
     */
    public final TableField<AppModelConfigsRecord, String> MODEL = createField(DSL.name("model"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.user_input_form</code>.
     */
    public final TableField<AppModelConfigsRecord, String> USER_INPUT_FORM = createField(DSL.name("user_input_form"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.pre_prompt</code>.
     */
    public final TableField<AppModelConfigsRecord, String> PRE_PROMPT = createField(DSL.name("pre_prompt"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.agent_mode</code>.
     */
    public final TableField<AppModelConfigsRecord, String> AGENT_MODE = createField(DSL.name("agent_mode"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.speech_to_text</code>.
     */
    public final TableField<AppModelConfigsRecord, String> SPEECH_TO_TEXT = createField(DSL.name("speech_to_text"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.sensitive_word_avoidance</code>.
     */
    public final TableField<AppModelConfigsRecord, String> SENSITIVE_WORD_AVOIDANCE = createField(DSL.name("sensitive_word_avoidance"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.retriever_resource</code>.
     */
    public final TableField<AppModelConfigsRecord, String> RETRIEVER_RESOURCE = createField(DSL.name("retriever_resource"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.dataset_query_variable</code>.
     */
    public final TableField<AppModelConfigsRecord, String> DATASET_QUERY_VARIABLE = createField(DSL.name("dataset_query_variable"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.app_model_configs.prompt_type</code>.
     */
    public final TableField<AppModelConfigsRecord, String> PROMPT_TYPE = createField(DSL.name("prompt_type"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.field("'simple'::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.app_model_configs.chat_prompt_config</code>.
     */
    public final TableField<AppModelConfigsRecord, String> CHAT_PROMPT_CONFIG = createField(DSL.name("chat_prompt_config"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.completion_prompt_config</code>.
     */
    public final TableField<AppModelConfigsRecord, String> COMPLETION_PROMPT_CONFIG = createField(DSL.name("completion_prompt_config"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.dataset_configs</code>.
     */
    public final TableField<AppModelConfigsRecord, String> DATASET_CONFIGS = createField(DSL.name("dataset_configs"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.external_data_tools</code>.
     */
    public final TableField<AppModelConfigsRecord, String> EXTERNAL_DATA_TOOLS = createField(DSL.name("external_data_tools"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.file_upload</code>.
     */
    public final TableField<AppModelConfigsRecord, String> FILE_UPLOAD = createField(DSL.name("file_upload"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.app_model_configs.text_to_speech</code>.
     */
    public final TableField<AppModelConfigsRecord, String> TEXT_TO_SPEECH = createField(DSL.name("text_to_speech"), SQLDataType.CLOB, this, "");

    private AppModelConfigs(Name alias, Table<AppModelConfigsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AppModelConfigs(Name alias, Table<AppModelConfigsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.app_model_configs</code> table reference
     */
    public AppModelConfigs(String alias) {
        this(DSL.name(alias), APP_MODEL_CONFIGS);
    }

    /**
     * Create an aliased <code>public.app_model_configs</code> table reference
     */
    public AppModelConfigs(Name alias) {
        this(alias, APP_MODEL_CONFIGS);
    }

    /**
     * Create a <code>public.app_model_configs</code> table reference
     */
    public AppModelConfigs() {
        this(DSL.name("app_model_configs"), null);
    }

    public <O extends Record> AppModelConfigs(Table<O> child, ForeignKey<O, AppModelConfigsRecord> key) {
        super(child, key, APP_MODEL_CONFIGS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.APP_APP_ID_IDX);
    }

    @Override
    public UniqueKey<AppModelConfigsRecord> getPrimaryKey() {
        return Keys.APP_MODEL_CONFIG_PKEY;
    }

    @Override
    public List<UniqueKey<AppModelConfigsRecord>> getKeys() {
        return Arrays.<UniqueKey<AppModelConfigsRecord>>asList(Keys.APP_MODEL_CONFIG_PKEY);
    }

    @Override
    public AppModelConfigs as(String alias) {
        return new AppModelConfigs(DSL.name(alias), this);
    }

    @Override
    public AppModelConfigs as(Name alias) {
        return new AppModelConfigs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AppModelConfigs rename(String name) {
        return new AppModelConfigs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AppModelConfigs rename(Name name) {
        return new AppModelConfigs(name, null);
    }
}
