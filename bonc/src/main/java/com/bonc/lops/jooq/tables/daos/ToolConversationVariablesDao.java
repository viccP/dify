/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.ToolConversationVariables;
import com.bonc.lops.jooq.tables.records.ToolConversationVariablesRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ToolConversationVariablesDao extends DAOImpl<ToolConversationVariablesRecord, com.bonc.lops.jooq.tables.pojos.ToolConversationVariables, UUID> {

    /**
     * Create a new ToolConversationVariablesDao without any configuration
     */
    public ToolConversationVariablesDao() {
        super(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES, com.bonc.lops.jooq.tables.pojos.ToolConversationVariables.class);
    }

    /**
     * Create a new ToolConversationVariablesDao with an attached configuration
     */
    @Autowired
    public ToolConversationVariablesDao(Configuration configuration) {
        super(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES, com.bonc.lops.jooq.tables.pojos.ToolConversationVariables.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.ToolConversationVariables object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchById(UUID... values) {
        return fetch(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.ToolConversationVariables fetchOneById(UUID value) {
        return fetchOne(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchRangeOfUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchByUserId(UUID... values) {
        return fetch(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.USER_ID, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchByTenantId(UUID... values) {
        return fetch(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>conversation_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchRangeOfConversationId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.CONVERSATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>conversation_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchByConversationId(UUID... values) {
        return fetch(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.CONVERSATION_ID, values);
    }

    /**
     * Fetch records that have <code>variables_str BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchRangeOfVariablesStr(String lowerInclusive, String upperInclusive) {
        return fetchRange(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.VARIABLES_STR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>variables_str IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchByVariablesStr(String... values) {
        return fetch(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.VARIABLES_STR, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ToolConversationVariables> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.UPDATED_AT, values);
    }
}
