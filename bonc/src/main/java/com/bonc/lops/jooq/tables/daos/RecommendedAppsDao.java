/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.RecommendedApps;
import com.bonc.lops.jooq.tables.records.RecommendedAppsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class RecommendedAppsDao extends DAOImpl<RecommendedAppsRecord, com.bonc.lops.jooq.tables.pojos.RecommendedApps, UUID> {

    /**
     * Create a new RecommendedAppsDao without any configuration
     */
    public RecommendedAppsDao() {
        super(RecommendedApps.RECOMMENDED_APPS, com.bonc.lops.jooq.tables.pojos.RecommendedApps.class);
    }

    /**
     * Create a new RecommendedAppsDao with an attached configuration
     */
    @Autowired
    public RecommendedAppsDao(Configuration configuration) {
        super(RecommendedApps.RECOMMENDED_APPS, com.bonc.lops.jooq.tables.pojos.RecommendedApps.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.RecommendedApps object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchById(UUID... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.RecommendedApps fetchOneById(UUID value) {
        return fetchOne(RecommendedApps.RECOMMENDED_APPS.ID, value);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByAppId(UUID... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfDescription(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByDescription(JSON... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>copyright BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfCopyright(String lowerInclusive, String upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.COPYRIGHT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>copyright IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByCopyright(String... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.COPYRIGHT, values);
    }

    /**
     * Fetch records that have <code>privacy_policy BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfPrivacyPolicy(String lowerInclusive, String upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.PRIVACY_POLICY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>privacy_policy IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByPrivacyPolicy(String... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.PRIVACY_POLICY, values);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByCategory(String... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>position BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfPosition(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.POSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>position IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByPosition(Integer... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.POSITION, values);
    }

    /**
     * Fetch records that have <code>is_listed BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfIsListed(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.IS_LISTED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_listed IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByIsListed(Boolean... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.IS_LISTED, values);
    }

    /**
     * Fetch records that have <code>install_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfInstallCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.INSTALL_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>install_count IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByInstallCount(Integer... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.INSTALL_COUNT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>language BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchRangeOfLanguage(String lowerInclusive, String upperInclusive) {
        return fetchRange(RecommendedApps.RECOMMENDED_APPS.LANGUAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>language IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.RecommendedApps> fetchByLanguage(String... values) {
        return fetch(RecommendedApps.RECOMMENDED_APPS.LANGUAGE, values);
    }
}
