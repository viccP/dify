/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.records;


import com.bonc.lops.jooq.tables.DatasetKeywordTables;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatasetKeywordTablesRecord extends UpdatableRecordImpl<DatasetKeywordTablesRecord> implements Record3<UUID, UUID, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dataset_keyword_tables.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dataset_keyword_tables.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.dataset_keyword_tables.dataset_id</code>.
     */
    public void setDatasetId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dataset_keyword_tables.dataset_id</code>.
     */
    public UUID getDatasetId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.dataset_keyword_tables.keyword_table</code>.
     */
    public void setKeywordTable(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.dataset_keyword_tables.keyword_table</code>.
     */
    public String getKeywordTable() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UUID, UUID, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return DatasetKeywordTables.DATASET_KEYWORD_TABLES.ID;
    }

    @Override
    public Field<UUID> field2() {
        return DatasetKeywordTables.DATASET_KEYWORD_TABLES.DATASET_ID;
    }

    @Override
    public Field<String> field3() {
        return DatasetKeywordTables.DATASET_KEYWORD_TABLES.KEYWORD_TABLE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getDatasetId();
    }

    @Override
    public String component3() {
        return getKeywordTable();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getDatasetId();
    }

    @Override
    public String value3() {
        return getKeywordTable();
    }

    @Override
    public DatasetKeywordTablesRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public DatasetKeywordTablesRecord value2(UUID value) {
        setDatasetId(value);
        return this;
    }

    @Override
    public DatasetKeywordTablesRecord value3(String value) {
        setKeywordTable(value);
        return this;
    }

    @Override
    public DatasetKeywordTablesRecord values(UUID value1, UUID value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatasetKeywordTablesRecord
     */
    public DatasetKeywordTablesRecord() {
        super(DatasetKeywordTables.DATASET_KEYWORD_TABLES);
    }

    /**
     * Create a detached, initialised DatasetKeywordTablesRecord
     */
    public DatasetKeywordTablesRecord(UUID id, UUID datasetId, String keywordTable) {
        super(DatasetKeywordTables.DATASET_KEYWORD_TABLES);

        setId(id);
        setDatasetId(datasetId);
        setKeywordTable(keywordTable);
    }
}
