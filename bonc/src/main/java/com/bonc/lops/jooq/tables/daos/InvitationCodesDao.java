/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.InvitationCodes;
import com.bonc.lops.jooq.tables.records.InvitationCodesRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class InvitationCodesDao extends DAOImpl<InvitationCodesRecord, com.bonc.lops.jooq.tables.pojos.InvitationCodes, Integer> {

    /**
     * Create a new InvitationCodesDao without any configuration
     */
    public InvitationCodesDao() {
        super(InvitationCodes.INVITATION_CODES, com.bonc.lops.jooq.tables.pojos.InvitationCodes.class);
    }

    /**
     * Create a new InvitationCodesDao with an attached configuration
     */
    @Autowired
    public InvitationCodesDao(Configuration configuration) {
        super(InvitationCodes.INVITATION_CODES, com.bonc.lops.jooq.tables.pojos.InvitationCodes.class, configuration);
    }

    @Override
    public Integer getId(com.bonc.lops.jooq.tables.pojos.InvitationCodes object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchById(Integer... values) {
        return fetch(InvitationCodes.INVITATION_CODES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.InvitationCodes fetchOneById(Integer value) {
        return fetchOne(InvitationCodes.INVITATION_CODES.ID, value);
    }

    /**
     * Fetch records that have <code>batch BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfBatch(String lowerInclusive, String upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.BATCH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>batch IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchByBatch(String... values) {
        return fetch(InvitationCodes.INVITATION_CODES.BATCH, values);
    }

    /**
     * Fetch records that have <code>code BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchByCode(String... values) {
        return fetch(InvitationCodes.INVITATION_CODES.CODE, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchByStatus(String... values) {
        return fetch(InvitationCodes.INVITATION_CODES.STATUS, values);
    }

    /**
     * Fetch records that have <code>used_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfUsedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.USED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>used_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchByUsedAt(LocalDateTime... values) {
        return fetch(InvitationCodes.INVITATION_CODES.USED_AT, values);
    }

    /**
     * Fetch records that have <code>used_by_tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfUsedByTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.USED_BY_TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>used_by_tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchByUsedByTenantId(UUID... values) {
        return fetch(InvitationCodes.INVITATION_CODES.USED_BY_TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>used_by_account_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfUsedByAccountId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.USED_BY_ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>used_by_account_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchByUsedByAccountId(UUID... values) {
        return fetch(InvitationCodes.INVITATION_CODES.USED_BY_ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>deprecated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfDeprecatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.DEPRECATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deprecated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchByDeprecatedAt(LocalDateTime... values) {
        return fetch(InvitationCodes.INVITATION_CODES.DEPRECATED_AT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(InvitationCodes.INVITATION_CODES.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.InvitationCodes> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(InvitationCodes.INVITATION_CODES.CREATED_AT, values);
    }
}
