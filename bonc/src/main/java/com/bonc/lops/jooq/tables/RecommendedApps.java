/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables;


import com.bonc.lops.jooq.Indexes;
import com.bonc.lops.jooq.Keys;
import com.bonc.lops.jooq.Public;
import com.bonc.lops.jooq.tables.records.RecommendedAppsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecommendedApps extends TableImpl<RecommendedAppsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.recommended_apps</code>
     */
    public static final RecommendedApps RECOMMENDED_APPS = new RecommendedApps();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecommendedAppsRecord> getRecordType() {
        return RecommendedAppsRecord.class;
    }

    /**
     * The column <code>public.recommended_apps.id</code>.
     */
    public final TableField<RecommendedAppsRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("uuid_generate_v4()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.recommended_apps.app_id</code>.
     */
    public final TableField<RecommendedAppsRecord, UUID> APP_ID = createField(DSL.name("app_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.recommended_apps.description</code>.
     */
    public final TableField<RecommendedAppsRecord, JSON> DESCRIPTION = createField(DSL.name("description"), SQLDataType.JSON.nullable(false), this, "");

    /**
     * The column <code>public.recommended_apps.copyright</code>.
     */
    public final TableField<RecommendedAppsRecord, String> COPYRIGHT = createField(DSL.name("copyright"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.recommended_apps.privacy_policy</code>.
     */
    public final TableField<RecommendedAppsRecord, String> PRIVACY_POLICY = createField(DSL.name("privacy_policy"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.recommended_apps.category</code>.
     */
    public final TableField<RecommendedAppsRecord, String> CATEGORY = createField(DSL.name("category"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.recommended_apps.position</code>.
     */
    public final TableField<RecommendedAppsRecord, Integer> POSITION = createField(DSL.name("position"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.recommended_apps.is_listed</code>.
     */
    public final TableField<RecommendedAppsRecord, Boolean> IS_LISTED = createField(DSL.name("is_listed"), SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.recommended_apps.install_count</code>.
     */
    public final TableField<RecommendedAppsRecord, Integer> INSTALL_COUNT = createField(DSL.name("install_count"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.recommended_apps.created_at</code>.
     */
    public final TableField<RecommendedAppsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.recommended_apps.updated_at</code>.
     */
    public final TableField<RecommendedAppsRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.recommended_apps.language</code>.
     */
    public final TableField<RecommendedAppsRecord, String> LANGUAGE = createField(DSL.name("language"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.field("'en-US'::character varying", SQLDataType.VARCHAR)), this, "");

    private RecommendedApps(Name alias, Table<RecommendedAppsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RecommendedApps(Name alias, Table<RecommendedAppsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.recommended_apps</code> table reference
     */
    public RecommendedApps(String alias) {
        this(DSL.name(alias), RECOMMENDED_APPS);
    }

    /**
     * Create an aliased <code>public.recommended_apps</code> table reference
     */
    public RecommendedApps(Name alias) {
        this(alias, RECOMMENDED_APPS);
    }

    /**
     * Create a <code>public.recommended_apps</code> table reference
     */
    public RecommendedApps() {
        this(DSL.name("recommended_apps"), null);
    }

    public <O extends Record> RecommendedApps(Table<O> child, ForeignKey<O, RecommendedAppsRecord> key) {
        super(child, key, RECOMMENDED_APPS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECOMMENDED_APP_APP_ID_IDX, Indexes.RECOMMENDED_APP_IS_LISTED_IDX);
    }

    @Override
    public UniqueKey<RecommendedAppsRecord> getPrimaryKey() {
        return Keys.RECOMMENDED_APP_PKEY;
    }

    @Override
    public List<UniqueKey<RecommendedAppsRecord>> getKeys() {
        return Arrays.<UniqueKey<RecommendedAppsRecord>>asList(Keys.RECOMMENDED_APP_PKEY);
    }

    @Override
    public RecommendedApps as(String alias) {
        return new RecommendedApps(DSL.name(alias), this);
    }

    @Override
    public RecommendedApps as(Name alias) {
        return new RecommendedApps(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RecommendedApps rename(String name) {
        return new RecommendedApps(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RecommendedApps rename(Name name) {
        return new RecommendedApps(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<UUID, UUID, JSON, String, String, String, Integer, Boolean, Integer, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
