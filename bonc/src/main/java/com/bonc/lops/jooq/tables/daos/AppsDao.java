/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.Apps;
import com.bonc.lops.jooq.tables.records.AppsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AppsDao extends DAOImpl<AppsRecord, com.bonc.lops.jooq.tables.pojos.Apps, UUID> {

    /**
     * Create a new AppsDao without any configuration
     */
    public AppsDao() {
        super(Apps.APPS, com.bonc.lops.jooq.tables.pojos.Apps.class);
    }

    /**
     * Create a new AppsDao with an attached configuration
     */
    @Autowired
    public AppsDao(Configuration configuration) {
        super(Apps.APPS, com.bonc.lops.jooq.tables.pojos.Apps.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.Apps object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Apps.APPS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchById(UUID... values) {
        return fetch(Apps.APPS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.Apps fetchOneById(UUID value) {
        return fetchOne(Apps.APPS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Apps.APPS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByTenantId(UUID... values) {
        return fetch(Apps.APPS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Apps.APPS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByName(String... values) {
        return fetch(Apps.APPS.NAME, values);
    }

    /**
     * Fetch records that have <code>mode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfMode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Apps.APPS.MODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mode IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByMode(String... values) {
        return fetch(Apps.APPS.MODE, values);
    }

    /**
     * Fetch records that have <code>icon BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfIcon(String lowerInclusive, String upperInclusive) {
        return fetchRange(Apps.APPS.ICON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>icon IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByIcon(String... values) {
        return fetch(Apps.APPS.ICON, values);
    }

    /**
     * Fetch records that have <code>icon_background BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfIconBackground(String lowerInclusive, String upperInclusive) {
        return fetchRange(Apps.APPS.ICON_BACKGROUND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>icon_background IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByIconBackground(String... values) {
        return fetch(Apps.APPS.ICON_BACKGROUND, values);
    }

    /**
     * Fetch records that have <code>app_model_config_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfAppModelConfigId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Apps.APPS.APP_MODEL_CONFIG_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_model_config_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByAppModelConfigId(UUID... values) {
        return fetch(Apps.APPS.APP_MODEL_CONFIG_ID, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Apps.APPS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByStatus(String... values) {
        return fetch(Apps.APPS.STATUS, values);
    }

    /**
     * Fetch records that have <code>enable_site BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfEnableSite(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Apps.APPS.ENABLE_SITE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enable_site IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByEnableSite(Boolean... values) {
        return fetch(Apps.APPS.ENABLE_SITE, values);
    }

    /**
     * Fetch records that have <code>enable_api BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfEnableApi(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Apps.APPS.ENABLE_API, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enable_api IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByEnableApi(Boolean... values) {
        return fetch(Apps.APPS.ENABLE_API, values);
    }

    /**
     * Fetch records that have <code>api_rpm BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfApiRpm(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Apps.APPS.API_RPM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>api_rpm IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByApiRpm(Integer... values) {
        return fetch(Apps.APPS.API_RPM, values);
    }

    /**
     * Fetch records that have <code>api_rph BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfApiRph(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Apps.APPS.API_RPH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>api_rph IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByApiRph(Integer... values) {
        return fetch(Apps.APPS.API_RPH, values);
    }

    /**
     * Fetch records that have <code>is_demo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfIsDemo(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Apps.APPS.IS_DEMO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_demo IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByIsDemo(Boolean... values) {
        return fetch(Apps.APPS.IS_DEMO, values);
    }

    /**
     * Fetch records that have <code>is_public BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfIsPublic(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Apps.APPS.IS_PUBLIC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_public IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByIsPublic(Boolean... values) {
        return fetch(Apps.APPS.IS_PUBLIC, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Apps.APPS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Apps.APPS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Apps.APPS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Apps.APPS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>is_universal BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfIsUniversal(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Apps.APPS.IS_UNIVERSAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_universal IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByIsUniversal(Boolean... values) {
        return fetch(Apps.APPS.IS_UNIVERSAL, values);
    }

    /**
     * Fetch records that have <code>workflow_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfWorkflowId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Apps.APPS.WORKFLOW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workflow_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByWorkflowId(UUID... values) {
        return fetch(Apps.APPS.WORKFLOW_ID, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Apps.APPS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Apps> fetchByDescription(String... values) {
        return fetch(Apps.APPS.DESCRIPTION, values);
    }
}
