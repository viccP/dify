/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.TenantDefaultModels;
import com.bonc.lops.jooq.tables.records.TenantDefaultModelsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TenantDefaultModelsDao extends DAOImpl<TenantDefaultModelsRecord, com.bonc.lops.jooq.tables.pojos.TenantDefaultModels, UUID> {

    /**
     * Create a new TenantDefaultModelsDao without any configuration
     */
    public TenantDefaultModelsDao() {
        super(TenantDefaultModels.TENANT_DEFAULT_MODELS, com.bonc.lops.jooq.tables.pojos.TenantDefaultModels.class);
    }

    /**
     * Create a new TenantDefaultModelsDao with an attached configuration
     */
    @Autowired
    public TenantDefaultModelsDao(Configuration configuration) {
        super(TenantDefaultModels.TENANT_DEFAULT_MODELS, com.bonc.lops.jooq.tables.pojos.TenantDefaultModels.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.TenantDefaultModels object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(TenantDefaultModels.TENANT_DEFAULT_MODELS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchById(UUID... values) {
        return fetch(TenantDefaultModels.TENANT_DEFAULT_MODELS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.TenantDefaultModels fetchOneById(UUID value) {
        return fetchOne(TenantDefaultModels.TENANT_DEFAULT_MODELS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(TenantDefaultModels.TENANT_DEFAULT_MODELS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchByTenantId(UUID... values) {
        return fetch(TenantDefaultModels.TENANT_DEFAULT_MODELS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>provider_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchRangeOfProviderName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TenantDefaultModels.TENANT_DEFAULT_MODELS.PROVIDER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>provider_name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchByProviderName(String... values) {
        return fetch(TenantDefaultModels.TENANT_DEFAULT_MODELS.PROVIDER_NAME, values);
    }

    /**
     * Fetch records that have <code>model_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchRangeOfModelName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TenantDefaultModels.TENANT_DEFAULT_MODELS.MODEL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchByModelName(String... values) {
        return fetch(TenantDefaultModels.TENANT_DEFAULT_MODELS.MODEL_NAME, values);
    }

    /**
     * Fetch records that have <code>model_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchRangeOfModelType(String lowerInclusive, String upperInclusive) {
        return fetchRange(TenantDefaultModels.TENANT_DEFAULT_MODELS.MODEL_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchByModelType(String... values) {
        return fetch(TenantDefaultModels.TENANT_DEFAULT_MODELS.MODEL_TYPE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TenantDefaultModels.TENANT_DEFAULT_MODELS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(TenantDefaultModels.TENANT_DEFAULT_MODELS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TenantDefaultModels.TENANT_DEFAULT_MODELS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.TenantDefaultModels> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(TenantDefaultModels.TENANT_DEFAULT_MODELS.UPDATED_AT, values);
    }
}
