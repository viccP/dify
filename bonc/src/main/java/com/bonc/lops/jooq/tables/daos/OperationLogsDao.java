/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.OperationLogs;
import com.bonc.lops.jooq.tables.records.OperationLogsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class OperationLogsDao extends DAOImpl<OperationLogsRecord, com.bonc.lops.jooq.tables.pojos.OperationLogs, UUID> {

    /**
     * Create a new OperationLogsDao without any configuration
     */
    public OperationLogsDao() {
        super(OperationLogs.OPERATION_LOGS, com.bonc.lops.jooq.tables.pojos.OperationLogs.class);
    }

    /**
     * Create a new OperationLogsDao with an attached configuration
     */
    @Autowired
    public OperationLogsDao(Configuration configuration) {
        super(OperationLogs.OPERATION_LOGS, com.bonc.lops.jooq.tables.pojos.OperationLogs.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.OperationLogs object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(OperationLogs.OPERATION_LOGS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchById(UUID... values) {
        return fetch(OperationLogs.OPERATION_LOGS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.OperationLogs fetchOneById(UUID value) {
        return fetchOne(OperationLogs.OPERATION_LOGS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(OperationLogs.OPERATION_LOGS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchByTenantId(UUID... values) {
        return fetch(OperationLogs.OPERATION_LOGS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>account_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchRangeOfAccountId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(OperationLogs.OPERATION_LOGS.ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchByAccountId(UUID... values) {
        return fetch(OperationLogs.OPERATION_LOGS.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>action BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchRangeOfAction(String lowerInclusive, String upperInclusive) {
        return fetchRange(OperationLogs.OPERATION_LOGS.ACTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>action IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchByAction(String... values) {
        return fetch(OperationLogs.OPERATION_LOGS.ACTION, values);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchRangeOfContent(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(OperationLogs.OPERATION_LOGS.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchByContent(JSON... values) {
        return fetch(OperationLogs.OPERATION_LOGS.CONTENT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OperationLogs.OPERATION_LOGS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(OperationLogs.OPERATION_LOGS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>created_ip BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchRangeOfCreatedIp(String lowerInclusive, String upperInclusive) {
        return fetchRange(OperationLogs.OPERATION_LOGS.CREATED_IP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_ip IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchByCreatedIp(String... values) {
        return fetch(OperationLogs.OPERATION_LOGS.CREATED_IP, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(OperationLogs.OPERATION_LOGS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.OperationLogs> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(OperationLogs.OPERATION_LOGS.UPDATED_AT, values);
    }
}
