/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.records;


import com.bonc.lops.jooq.tables.AppAnnotationSettings;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppAnnotationSettingsRecord extends UpdatableRecordImpl<AppAnnotationSettingsRecord> implements Record8<UUID, UUID, Double, UUID, UUID, LocalDateTime, UUID, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.app_annotation_settings.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.app_annotation_settings.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.app_annotation_settings.app_id</code>.
     */
    public void setAppId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.app_annotation_settings.app_id</code>.
     */
    public UUID getAppId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.app_annotation_settings.score_threshold</code>.
     */
    public void setScoreThreshold(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.app_annotation_settings.score_threshold</code>.
     */
    public Double getScoreThreshold() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.app_annotation_settings.collection_binding_id</code>.
     */
    public void setCollectionBindingId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.app_annotation_settings.collection_binding_id</code>.
     */
    public UUID getCollectionBindingId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.app_annotation_settings.created_user_id</code>.
     */
    public void setCreatedUserId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.app_annotation_settings.created_user_id</code>.
     */
    public UUID getCreatedUserId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.app_annotation_settings.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.app_annotation_settings.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.app_annotation_settings.updated_user_id</code>.
     */
    public void setUpdatedUserId(UUID value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.app_annotation_settings.updated_user_id</code>.
     */
    public UUID getUpdatedUserId() {
        return (UUID) get(6);
    }

    /**
     * Setter for <code>public.app_annotation_settings.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.app_annotation_settings.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, Double, UUID, UUID, LocalDateTime, UUID, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, Double, UUID, UUID, LocalDateTime, UUID, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return AppAnnotationSettings.APP_ANNOTATION_SETTINGS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return AppAnnotationSettings.APP_ANNOTATION_SETTINGS.APP_ID;
    }

    @Override
    public Field<Double> field3() {
        return AppAnnotationSettings.APP_ANNOTATION_SETTINGS.SCORE_THRESHOLD;
    }

    @Override
    public Field<UUID> field4() {
        return AppAnnotationSettings.APP_ANNOTATION_SETTINGS.COLLECTION_BINDING_ID;
    }

    @Override
    public Field<UUID> field5() {
        return AppAnnotationSettings.APP_ANNOTATION_SETTINGS.CREATED_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return AppAnnotationSettings.APP_ANNOTATION_SETTINGS.CREATED_AT;
    }

    @Override
    public Field<UUID> field7() {
        return AppAnnotationSettings.APP_ANNOTATION_SETTINGS.UPDATED_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return AppAnnotationSettings.APP_ANNOTATION_SETTINGS.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getAppId();
    }

    @Override
    public Double component3() {
        return getScoreThreshold();
    }

    @Override
    public UUID component4() {
        return getCollectionBindingId();
    }

    @Override
    public UUID component5() {
        return getCreatedUserId();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public UUID component7() {
        return getUpdatedUserId();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getAppId();
    }

    @Override
    public Double value3() {
        return getScoreThreshold();
    }

    @Override
    public UUID value4() {
        return getCollectionBindingId();
    }

    @Override
    public UUID value5() {
        return getCreatedUserId();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public UUID value7() {
        return getUpdatedUserId();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public AppAnnotationSettingsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public AppAnnotationSettingsRecord value2(UUID value) {
        setAppId(value);
        return this;
    }

    @Override
    public AppAnnotationSettingsRecord value3(Double value) {
        setScoreThreshold(value);
        return this;
    }

    @Override
    public AppAnnotationSettingsRecord value4(UUID value) {
        setCollectionBindingId(value);
        return this;
    }

    @Override
    public AppAnnotationSettingsRecord value5(UUID value) {
        setCreatedUserId(value);
        return this;
    }

    @Override
    public AppAnnotationSettingsRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AppAnnotationSettingsRecord value7(UUID value) {
        setUpdatedUserId(value);
        return this;
    }

    @Override
    public AppAnnotationSettingsRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AppAnnotationSettingsRecord values(UUID value1, UUID value2, Double value3, UUID value4, UUID value5, LocalDateTime value6, UUID value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppAnnotationSettingsRecord
     */
    public AppAnnotationSettingsRecord() {
        super(AppAnnotationSettings.APP_ANNOTATION_SETTINGS);
    }

    /**
     * Create a detached, initialised AppAnnotationSettingsRecord
     */
    public AppAnnotationSettingsRecord(UUID id, UUID appId, Double scoreThreshold, UUID collectionBindingId, UUID createdUserId, LocalDateTime createdAt, UUID updatedUserId, LocalDateTime updatedAt) {
        super(AppAnnotationSettings.APP_ANNOTATION_SETTINGS);

        setId(id);
        setAppId(appId);
        setScoreThreshold(scoreThreshold);
        setCollectionBindingId(collectionBindingId);
        setCreatedUserId(createdUserId);
        setCreatedAt(createdAt);
        setUpdatedUserId(updatedUserId);
        setUpdatedAt(updatedAt);
    }
}
