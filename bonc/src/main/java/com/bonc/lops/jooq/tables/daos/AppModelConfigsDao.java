/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.AppModelConfigs;
import com.bonc.lops.jooq.tables.records.AppModelConfigsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AppModelConfigsDao extends DAOImpl<AppModelConfigsRecord, com.bonc.lops.jooq.tables.pojos.AppModelConfigs, UUID> {

    /**
     * Create a new AppModelConfigsDao without any configuration
     */
    public AppModelConfigsDao() {
        super(AppModelConfigs.APP_MODEL_CONFIGS, com.bonc.lops.jooq.tables.pojos.AppModelConfigs.class);
    }

    /**
     * Create a new AppModelConfigsDao with an attached configuration
     */
    @Autowired
    public AppModelConfigsDao(Configuration configuration) {
        super(AppModelConfigs.APP_MODEL_CONFIGS, com.bonc.lops.jooq.tables.pojos.AppModelConfigs.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.AppModelConfigs object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchById(UUID... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.AppModelConfigs fetchOneById(UUID value) {
        return fetchOne(AppModelConfigs.APP_MODEL_CONFIGS.ID, value);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByAppId(UUID... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>provider BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfProvider(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.PROVIDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>provider IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByProvider(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.PROVIDER, values);
    }

    /**
     * Fetch records that have <code>model_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfModelId(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.MODEL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByModelId(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.MODEL_ID, values);
    }

    /**
     * Fetch records that have <code>configs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfConfigs(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.CONFIGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>configs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByConfigs(JSON... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.CONFIGS, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>opening_statement BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfOpeningStatement(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.OPENING_STATEMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opening_statement IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByOpeningStatement(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.OPENING_STATEMENT, values);
    }

    /**
     * Fetch records that have <code>suggested_questions BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfSuggestedQuestions(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.SUGGESTED_QUESTIONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>suggested_questions IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchBySuggestedQuestions(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.SUGGESTED_QUESTIONS, values);
    }

    /**
     * Fetch records that have <code>suggested_questions_after_answer BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfSuggestedQuestionsAfterAnswer(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.SUGGESTED_QUESTIONS_AFTER_ANSWER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>suggested_questions_after_answer IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchBySuggestedQuestionsAfterAnswer(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.SUGGESTED_QUESTIONS_AFTER_ANSWER, values);
    }

    /**
     * Fetch records that have <code>more_like_this BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfMoreLikeThis(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.MORE_LIKE_THIS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>more_like_this IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByMoreLikeThis(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.MORE_LIKE_THIS, values);
    }

    /**
     * Fetch records that have <code>model BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfModel(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.MODEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByModel(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.MODEL, values);
    }

    /**
     * Fetch records that have <code>user_input_form BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfUserInputForm(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.USER_INPUT_FORM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_input_form IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByUserInputForm(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.USER_INPUT_FORM, values);
    }

    /**
     * Fetch records that have <code>pre_prompt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfPrePrompt(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.PRE_PROMPT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pre_prompt IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByPrePrompt(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.PRE_PROMPT, values);
    }

    /**
     * Fetch records that have <code>agent_mode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfAgentMode(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.AGENT_MODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>agent_mode IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByAgentMode(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.AGENT_MODE, values);
    }

    /**
     * Fetch records that have <code>speech_to_text BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfSpeechToText(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.SPEECH_TO_TEXT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>speech_to_text IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchBySpeechToText(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.SPEECH_TO_TEXT, values);
    }

    /**
     * Fetch records that have <code>sensitive_word_avoidance BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfSensitiveWordAvoidance(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.SENSITIVE_WORD_AVOIDANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sensitive_word_avoidance IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchBySensitiveWordAvoidance(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.SENSITIVE_WORD_AVOIDANCE, values);
    }

    /**
     * Fetch records that have <code>retriever_resource BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfRetrieverResource(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.RETRIEVER_RESOURCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>retriever_resource IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByRetrieverResource(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.RETRIEVER_RESOURCE, values);
    }

    /**
     * Fetch records that have <code>dataset_query_variable BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfDatasetQueryVariable(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.DATASET_QUERY_VARIABLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dataset_query_variable IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByDatasetQueryVariable(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.DATASET_QUERY_VARIABLE, values);
    }

    /**
     * Fetch records that have <code>prompt_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfPromptType(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.PROMPT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>prompt_type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByPromptType(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.PROMPT_TYPE, values);
    }

    /**
     * Fetch records that have <code>chat_prompt_config BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfChatPromptConfig(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.CHAT_PROMPT_CONFIG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>chat_prompt_config IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByChatPromptConfig(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.CHAT_PROMPT_CONFIG, values);
    }

    /**
     * Fetch records that have <code>completion_prompt_config BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfCompletionPromptConfig(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.COMPLETION_PROMPT_CONFIG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>completion_prompt_config IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByCompletionPromptConfig(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.COMPLETION_PROMPT_CONFIG, values);
    }

    /**
     * Fetch records that have <code>dataset_configs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfDatasetConfigs(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.DATASET_CONFIGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dataset_configs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByDatasetConfigs(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.DATASET_CONFIGS, values);
    }

    /**
     * Fetch records that have <code>external_data_tools BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfExternalDataTools(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.EXTERNAL_DATA_TOOLS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>external_data_tools IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByExternalDataTools(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.EXTERNAL_DATA_TOOLS, values);
    }

    /**
     * Fetch records that have <code>file_upload BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfFileUpload(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.FILE_UPLOAD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_upload IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByFileUpload(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.FILE_UPLOAD, values);
    }

    /**
     * Fetch records that have <code>text_to_speech BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchRangeOfTextToSpeech(String lowerInclusive, String upperInclusive) {
        return fetchRange(AppModelConfigs.APP_MODEL_CONFIGS.TEXT_TO_SPEECH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>text_to_speech IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppModelConfigs> fetchByTextToSpeech(String... values) {
        return fetch(AppModelConfigs.APP_MODEL_CONFIGS.TEXT_TO_SPEECH, values);
    }
}
