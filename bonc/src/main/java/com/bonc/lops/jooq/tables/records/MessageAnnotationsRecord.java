/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.records;


import com.bonc.lops.jooq.tables.MessageAnnotations;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageAnnotationsRecord extends UpdatableRecordImpl<MessageAnnotationsRecord> implements Record10<UUID, UUID, UUID, UUID, String, UUID, LocalDateTime, LocalDateTime, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.message_annotations.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.message_annotations.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.message_annotations.app_id</code>.
     */
    public void setAppId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.message_annotations.app_id</code>.
     */
    public UUID getAppId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.message_annotations.conversation_id</code>.
     */
    public void setConversationId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.message_annotations.conversation_id</code>.
     */
    public UUID getConversationId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.message_annotations.message_id</code>.
     */
    public void setMessageId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.message_annotations.message_id</code>.
     */
    public UUID getMessageId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.message_annotations.content</code>.
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.message_annotations.content</code>.
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.message_annotations.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.message_annotations.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.message_annotations.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.message_annotations.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.message_annotations.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.message_annotations.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.message_annotations.question</code>.
     */
    public void setQuestion(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.message_annotations.question</code>.
     */
    public String getQuestion() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.message_annotations.hit_count</code>.
     */
    public void setHitCount(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.message_annotations.hit_count</code>.
     */
    public Integer getHitCount() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<UUID, UUID, UUID, UUID, String, UUID, LocalDateTime, LocalDateTime, String, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<UUID, UUID, UUID, UUID, String, UUID, LocalDateTime, LocalDateTime, String, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.APP_ID;
    }

    @Override
    public Field<UUID> field3() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.CONVERSATION_ID;
    }

    @Override
    public Field<UUID> field4() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.MESSAGE_ID;
    }

    @Override
    public Field<String> field5() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.CONTENT;
    }

    @Override
    public Field<UUID> field6() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.ACCOUNT_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.UPDATED_AT;
    }

    @Override
    public Field<String> field9() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.QUESTION;
    }

    @Override
    public Field<Integer> field10() {
        return MessageAnnotations.MESSAGE_ANNOTATIONS.HIT_COUNT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getAppId();
    }

    @Override
    public UUID component3() {
        return getConversationId();
    }

    @Override
    public UUID component4() {
        return getMessageId();
    }

    @Override
    public String component5() {
        return getContent();
    }

    @Override
    public UUID component6() {
        return getAccountId();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public String component9() {
        return getQuestion();
    }

    @Override
    public Integer component10() {
        return getHitCount();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getAppId();
    }

    @Override
    public UUID value3() {
        return getConversationId();
    }

    @Override
    public UUID value4() {
        return getMessageId();
    }

    @Override
    public String value5() {
        return getContent();
    }

    @Override
    public UUID value6() {
        return getAccountId();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public String value9() {
        return getQuestion();
    }

    @Override
    public Integer value10() {
        return getHitCount();
    }

    @Override
    public MessageAnnotationsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value2(UUID value) {
        setAppId(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value3(UUID value) {
        setConversationId(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value4(UUID value) {
        setMessageId(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value5(String value) {
        setContent(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value6(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value9(String value) {
        setQuestion(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord value10(Integer value) {
        setHitCount(value);
        return this;
    }

    @Override
    public MessageAnnotationsRecord values(UUID value1, UUID value2, UUID value3, UUID value4, String value5, UUID value6, LocalDateTime value7, LocalDateTime value8, String value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageAnnotationsRecord
     */
    public MessageAnnotationsRecord() {
        super(MessageAnnotations.MESSAGE_ANNOTATIONS);
    }

    /**
     * Create a detached, initialised MessageAnnotationsRecord
     */
    public MessageAnnotationsRecord(UUID id, UUID appId, UUID conversationId, UUID messageId, String content, UUID accountId, LocalDateTime createdAt, LocalDateTime updatedAt, String question, Integer hitCount) {
        super(MessageAnnotations.MESSAGE_ANNOTATIONS);

        setId(id);
        setAppId(appId);
        setConversationId(conversationId);
        setMessageId(messageId);
        setContent(content);
        setAccountId(accountId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setQuestion(question);
        setHitCount(hitCount);
    }
}
