/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.MessageChains;
import com.bonc.lops.jooq.tables.records.MessageChainsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MessageChainsDao extends DAOImpl<MessageChainsRecord, com.bonc.lops.jooq.tables.pojos.MessageChains, UUID> {

    /**
     * Create a new MessageChainsDao without any configuration
     */
    public MessageChainsDao() {
        super(MessageChains.MESSAGE_CHAINS, com.bonc.lops.jooq.tables.pojos.MessageChains.class);
    }

    /**
     * Create a new MessageChainsDao with an attached configuration
     */
    @Autowired
    public MessageChainsDao(Configuration configuration) {
        super(MessageChains.MESSAGE_CHAINS, com.bonc.lops.jooq.tables.pojos.MessageChains.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.MessageChains object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MessageChains.MESSAGE_CHAINS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchById(UUID... values) {
        return fetch(MessageChains.MESSAGE_CHAINS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.MessageChains fetchOneById(UUID value) {
        return fetchOne(MessageChains.MESSAGE_CHAINS.ID, value);
    }

    /**
     * Fetch records that have <code>message_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchRangeOfMessageId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MessageChains.MESSAGE_CHAINS.MESSAGE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchByMessageId(UUID... values) {
        return fetch(MessageChains.MESSAGE_CHAINS.MESSAGE_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(MessageChains.MESSAGE_CHAINS.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchByType(String... values) {
        return fetch(MessageChains.MESSAGE_CHAINS.TYPE, values);
    }

    /**
     * Fetch records that have <code>input BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchRangeOfInput(String lowerInclusive, String upperInclusive) {
        return fetchRange(MessageChains.MESSAGE_CHAINS.INPUT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>input IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchByInput(String... values) {
        return fetch(MessageChains.MESSAGE_CHAINS.INPUT, values);
    }

    /**
     * Fetch records that have <code>output BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchRangeOfOutput(String lowerInclusive, String upperInclusive) {
        return fetchRange(MessageChains.MESSAGE_CHAINS.OUTPUT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>output IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchByOutput(String... values) {
        return fetch(MessageChains.MESSAGE_CHAINS.OUTPUT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MessageChains.MESSAGE_CHAINS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageChains> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(MessageChains.MESSAGE_CHAINS.CREATED_AT, values);
    }
}
