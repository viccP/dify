/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.records;


import com.bonc.lops.jooq.tables.Tenants;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TenantsRecord extends UpdatableRecordImpl<TenantsRecord> implements Record8<UUID, String, String, String, String, LocalDateTime, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tenants.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tenants.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.tenants.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tenants.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.tenants.encrypt_public_key</code>.
     */
    public void setEncryptPublicKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tenants.encrypt_public_key</code>.
     */
    public String getEncryptPublicKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.tenants.plan</code>.
     */
    public void setPlan(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tenants.plan</code>.
     */
    public String getPlan() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.tenants.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tenants.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.tenants.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tenants.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.tenants.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.tenants.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.tenants.custom_config</code>.
     */
    public void setCustomConfig(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.tenants.custom_config</code>.
     */
    public String getCustomConfig() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, String, String, String, String, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, String, String, String, String, LocalDateTime, LocalDateTime, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Tenants.TENANTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Tenants.TENANTS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Tenants.TENANTS.ENCRYPT_PUBLIC_KEY;
    }

    @Override
    public Field<String> field4() {
        return Tenants.TENANTS.PLAN;
    }

    @Override
    public Field<String> field5() {
        return Tenants.TENANTS.STATUS;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Tenants.TENANTS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Tenants.TENANTS.UPDATED_AT;
    }

    @Override
    public Field<String> field8() {
        return Tenants.TENANTS.CUSTOM_CONFIG;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getEncryptPublicKey();
    }

    @Override
    public String component4() {
        return getPlan();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public String component8() {
        return getCustomConfig();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getEncryptPublicKey();
    }

    @Override
    public String value4() {
        return getPlan();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public String value8() {
        return getCustomConfig();
    }

    @Override
    public TenantsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TenantsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TenantsRecord value3(String value) {
        setEncryptPublicKey(value);
        return this;
    }

    @Override
    public TenantsRecord value4(String value) {
        setPlan(value);
        return this;
    }

    @Override
    public TenantsRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public TenantsRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TenantsRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public TenantsRecord value8(String value) {
        setCustomConfig(value);
        return this;
    }

    @Override
    public TenantsRecord values(UUID value1, String value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TenantsRecord
     */
    public TenantsRecord() {
        super(Tenants.TENANTS);
    }

    /**
     * Create a detached, initialised TenantsRecord
     */
    public TenantsRecord(UUID id, String name, String encryptPublicKey, String plan, String status, LocalDateTime createdAt, LocalDateTime updatedAt, String customConfig) {
        super(Tenants.TENANTS);

        setId(id);
        setName(name);
        setEncryptPublicKey(encryptPublicKey);
        setPlan(plan);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCustomConfig(customConfig);
    }
}
