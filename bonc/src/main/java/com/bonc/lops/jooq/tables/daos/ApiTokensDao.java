/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.ApiTokens;
import com.bonc.lops.jooq.tables.records.ApiTokensRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ApiTokensDao extends DAOImpl<ApiTokensRecord, com.bonc.lops.jooq.tables.pojos.ApiTokens, UUID> {

    /**
     * Create a new ApiTokensDao without any configuration
     */
    public ApiTokensDao() {
        super(ApiTokens.API_TOKENS, com.bonc.lops.jooq.tables.pojos.ApiTokens.class);
    }

    /**
     * Create a new ApiTokensDao with an attached configuration
     */
    @Autowired
    public ApiTokensDao(Configuration configuration) {
        super(ApiTokens.API_TOKENS, com.bonc.lops.jooq.tables.pojos.ApiTokens.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.ApiTokens object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ApiTokens.API_TOKENS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchById(UUID... values) {
        return fetch(ApiTokens.API_TOKENS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.ApiTokens fetchOneById(UUID value) {
        return fetchOne(ApiTokens.API_TOKENS.ID, value);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ApiTokens.API_TOKENS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchByAppId(UUID... values) {
        return fetch(ApiTokens.API_TOKENS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(ApiTokens.API_TOKENS.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchByType(String... values) {
        return fetch(ApiTokens.API_TOKENS.TYPE, values);
    }

    /**
     * Fetch records that have <code>token BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchRangeOfToken(String lowerInclusive, String upperInclusive) {
        return fetchRange(ApiTokens.API_TOKENS.TOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>token IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchByToken(String... values) {
        return fetch(ApiTokens.API_TOKENS.TOKEN, values);
    }

    /**
     * Fetch records that have <code>last_used_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchRangeOfLastUsedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ApiTokens.API_TOKENS.LAST_USED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_used_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchByLastUsedAt(LocalDateTime... values) {
        return fetch(ApiTokens.API_TOKENS.LAST_USED_AT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ApiTokens.API_TOKENS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ApiTokens.API_TOKENS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ApiTokens.API_TOKENS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiTokens> fetchByTenantId(UUID... values) {
        return fetch(ApiTokens.API_TOKENS.TENANT_ID, values);
    }
}
