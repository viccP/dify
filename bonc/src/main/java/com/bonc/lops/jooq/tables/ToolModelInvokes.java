/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables;


import com.bonc.lops.jooq.Keys;
import com.bonc.lops.jooq.Public;
import com.bonc.lops.jooq.tables.records.ToolModelInvokesRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ToolModelInvokes extends TableImpl<ToolModelInvokesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.tool_model_invokes</code>
     */
    public static final ToolModelInvokes TOOL_MODEL_INVOKES = new ToolModelInvokes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ToolModelInvokesRecord> getRecordType() {
        return ToolModelInvokesRecord.class;
    }

    /**
     * The column <code>public.tool_model_invokes.id</code>.
     */
    public final TableField<ToolModelInvokesRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("uuid_generate_v4()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.tool_model_invokes.user_id</code>.
     */
    public final TableField<ToolModelInvokesRecord, UUID> USER_ID = createField(DSL.name("user_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.tenant_id</code>.
     */
    public final TableField<ToolModelInvokesRecord, UUID> TENANT_ID = createField(DSL.name("tenant_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.provider</code>.
     */
    public final TableField<ToolModelInvokesRecord, String> PROVIDER = createField(DSL.name("provider"), SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.tool_type</code>.
     */
    public final TableField<ToolModelInvokesRecord, String> TOOL_TYPE = createField(DSL.name("tool_type"), SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.tool_name</code>.
     */
    public final TableField<ToolModelInvokesRecord, String> TOOL_NAME = createField(DSL.name("tool_name"), SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.model_parameters</code>.
     */
    public final TableField<ToolModelInvokesRecord, String> MODEL_PARAMETERS = createField(DSL.name("model_parameters"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.prompt_messages</code>.
     */
    public final TableField<ToolModelInvokesRecord, String> PROMPT_MESSAGES = createField(DSL.name("prompt_messages"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.model_response</code>.
     */
    public final TableField<ToolModelInvokesRecord, String> MODEL_RESPONSE = createField(DSL.name("model_response"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.prompt_tokens</code>.
     */
    public final TableField<ToolModelInvokesRecord, Integer> PROMPT_TOKENS = createField(DSL.name("prompt_tokens"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tool_model_invokes.answer_tokens</code>.
     */
    public final TableField<ToolModelInvokesRecord, Integer> ANSWER_TOKENS = createField(DSL.name("answer_tokens"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tool_model_invokes.answer_unit_price</code>.
     */
    public final TableField<ToolModelInvokesRecord, BigDecimal> ANSWER_UNIT_PRICE = createField(DSL.name("answer_unit_price"), SQLDataType.NUMERIC(10, 4).nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.answer_price_unit</code>.
     */
    public final TableField<ToolModelInvokesRecord, BigDecimal> ANSWER_PRICE_UNIT = createField(DSL.name("answer_price_unit"), SQLDataType.NUMERIC(10, 7).nullable(false).defaultValue(DSL.field("0.001", SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>public.tool_model_invokes.provider_response_latency</code>.
     */
    public final TableField<ToolModelInvokesRecord, Double> PROVIDER_RESPONSE_LATENCY = createField(DSL.name("provider_response_latency"), SQLDataType.DOUBLE.nullable(false).defaultValue(DSL.field("0", SQLDataType.DOUBLE)), this, "");

    /**
     * The column <code>public.tool_model_invokes.total_price</code>.
     */
    public final TableField<ToolModelInvokesRecord, BigDecimal> TOTAL_PRICE = createField(DSL.name("total_price"), SQLDataType.NUMERIC(10, 7), this, "");

    /**
     * The column <code>public.tool_model_invokes.currency</code>.
     */
    public final TableField<ToolModelInvokesRecord, String> CURRENCY = createField(DSL.name("currency"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.tool_model_invokes.created_at</code>.
     */
    public final TableField<ToolModelInvokesRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.tool_model_invokes.updated_at</code>.
     */
    public final TableField<ToolModelInvokesRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    private ToolModelInvokes(Name alias, Table<ToolModelInvokesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ToolModelInvokes(Name alias, Table<ToolModelInvokesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.tool_model_invokes</code> table reference
     */
    public ToolModelInvokes(String alias) {
        this(DSL.name(alias), TOOL_MODEL_INVOKES);
    }

    /**
     * Create an aliased <code>public.tool_model_invokes</code> table reference
     */
    public ToolModelInvokes(Name alias) {
        this(alias, TOOL_MODEL_INVOKES);
    }

    /**
     * Create a <code>public.tool_model_invokes</code> table reference
     */
    public ToolModelInvokes() {
        this(DSL.name("tool_model_invokes"), null);
    }

    public <O extends Record> ToolModelInvokes(Table<O> child, ForeignKey<O, ToolModelInvokesRecord> key) {
        super(child, key, TOOL_MODEL_INVOKES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<ToolModelInvokesRecord> getPrimaryKey() {
        return Keys.TOOL_MODEL_INVOKE_PKEY;
    }

    @Override
    public List<UniqueKey<ToolModelInvokesRecord>> getKeys() {
        return Arrays.<UniqueKey<ToolModelInvokesRecord>>asList(Keys.TOOL_MODEL_INVOKE_PKEY);
    }

    @Override
    public ToolModelInvokes as(String alias) {
        return new ToolModelInvokes(DSL.name(alias), this);
    }

    @Override
    public ToolModelInvokes as(Name alias) {
        return new ToolModelInvokes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ToolModelInvokes rename(String name) {
        return new ToolModelInvokes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ToolModelInvokes rename(Name name) {
        return new ToolModelInvokes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<UUID, UUID, UUID, String, String, String, String, String, String, Integer, Integer, BigDecimal, BigDecimal, Double, BigDecimal, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
