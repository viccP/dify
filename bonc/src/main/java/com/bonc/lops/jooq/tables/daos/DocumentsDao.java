/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.Documents;
import com.bonc.lops.jooq.tables.records.DocumentsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DocumentsDao extends DAOImpl<DocumentsRecord, com.bonc.lops.jooq.tables.pojos.Documents, UUID> {

    /**
     * Create a new DocumentsDao without any configuration
     */
    public DocumentsDao() {
        super(Documents.DOCUMENTS, com.bonc.lops.jooq.tables.pojos.Documents.class);
    }

    /**
     * Create a new DocumentsDao with an attached configuration
     */
    @Autowired
    public DocumentsDao(Configuration configuration) {
        super(Documents.DOCUMENTS, com.bonc.lops.jooq.tables.pojos.Documents.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.Documents object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchById(UUID... values) {
        return fetch(Documents.DOCUMENTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.Documents fetchOneById(UUID value) {
        return fetchOne(Documents.DOCUMENTS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByTenantId(UUID... values) {
        return fetch(Documents.DOCUMENTS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>dataset_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDatasetId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DATASET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dataset_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDatasetId(UUID... values) {
        return fetch(Documents.DOCUMENTS.DATASET_ID, values);
    }

    /**
     * Fetch records that have <code>position BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfPosition(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.POSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>position IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByPosition(Integer... values) {
        return fetch(Documents.DOCUMENTS.POSITION, values);
    }

    /**
     * Fetch records that have <code>data_source_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDataSourceType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DATA_SOURCE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>data_source_type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDataSourceType(String... values) {
        return fetch(Documents.DOCUMENTS.DATA_SOURCE_TYPE, values);
    }

    /**
     * Fetch records that have <code>data_source_info BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDataSourceInfo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DATA_SOURCE_INFO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>data_source_info IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDataSourceInfo(String... values) {
        return fetch(Documents.DOCUMENTS.DATA_SOURCE_INFO, values);
    }

    /**
     * Fetch records that have <code>dataset_process_rule_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDatasetProcessRuleId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DATASET_PROCESS_RULE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dataset_process_rule_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDatasetProcessRuleId(UUID... values) {
        return fetch(Documents.DOCUMENTS.DATASET_PROCESS_RULE_ID, values);
    }

    /**
     * Fetch records that have <code>batch BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfBatch(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.BATCH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>batch IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByBatch(String... values) {
        return fetch(Documents.DOCUMENTS.BATCH, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByName(String... values) {
        return fetch(Documents.DOCUMENTS.NAME, values);
    }

    /**
     * Fetch records that have <code>created_from BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfCreatedFrom(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.CREATED_FROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_from IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByCreatedFrom(String... values) {
        return fetch(Documents.DOCUMENTS.CREATED_FROM, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfCreatedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByCreatedBy(UUID... values) {
        return fetch(Documents.DOCUMENTS.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_api_request_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfCreatedApiRequestId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.CREATED_API_REQUEST_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_api_request_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByCreatedApiRequestId(UUID... values) {
        return fetch(Documents.DOCUMENTS.CREATED_API_REQUEST_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>processing_started_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfProcessingStartedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.PROCESSING_STARTED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>processing_started_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByProcessingStartedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.PROCESSING_STARTED_AT, values);
    }

    /**
     * Fetch records that have <code>file_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfFileId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.FILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByFileId(String... values) {
        return fetch(Documents.DOCUMENTS.FILE_ID, values);
    }

    /**
     * Fetch records that have <code>word_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfWordCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.WORD_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>word_count IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByWordCount(Integer... values) {
        return fetch(Documents.DOCUMENTS.WORD_COUNT, values);
    }

    /**
     * Fetch records that have <code>parsing_completed_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfParsingCompletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.PARSING_COMPLETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parsing_completed_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByParsingCompletedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.PARSING_COMPLETED_AT, values);
    }

    /**
     * Fetch records that have <code>cleaning_completed_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfCleaningCompletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.CLEANING_COMPLETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cleaning_completed_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByCleaningCompletedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.CLEANING_COMPLETED_AT, values);
    }

    /**
     * Fetch records that have <code>splitting_completed_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfSplittingCompletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.SPLITTING_COMPLETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>splitting_completed_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchBySplittingCompletedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.SPLITTING_COMPLETED_AT, values);
    }

    /**
     * Fetch records that have <code>tokens BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfTokens(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.TOKENS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tokens IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByTokens(Integer... values) {
        return fetch(Documents.DOCUMENTS.TOKENS, values);
    }

    /**
     * Fetch records that have <code>indexing_latency BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfIndexingLatency(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.INDEXING_LATENCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>indexing_latency IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByIndexingLatency(Double... values) {
        return fetch(Documents.DOCUMENTS.INDEXING_LATENCY, values);
    }

    /**
     * Fetch records that have <code>completed_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfCompletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.COMPLETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>completed_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByCompletedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.COMPLETED_AT, values);
    }

    /**
     * Fetch records that have <code>is_paused BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfIsPaused(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.IS_PAUSED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_paused IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByIsPaused(Boolean... values) {
        return fetch(Documents.DOCUMENTS.IS_PAUSED, values);
    }

    /**
     * Fetch records that have <code>paused_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfPausedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.PAUSED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>paused_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByPausedBy(UUID... values) {
        return fetch(Documents.DOCUMENTS.PAUSED_BY, values);
    }

    /**
     * Fetch records that have <code>paused_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfPausedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.PAUSED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>paused_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByPausedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.PAUSED_AT, values);
    }

    /**
     * Fetch records that have <code>error BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfError(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.ERROR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>error IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByError(String... values) {
        return fetch(Documents.DOCUMENTS.ERROR, values);
    }

    /**
     * Fetch records that have <code>stopped_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfStoppedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.STOPPED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>stopped_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByStoppedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.STOPPED_AT, values);
    }

    /**
     * Fetch records that have <code>indexing_status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfIndexingStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.INDEXING_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>indexing_status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByIndexingStatus(String... values) {
        return fetch(Documents.DOCUMENTS.INDEXING_STATUS, values);
    }

    /**
     * Fetch records that have <code>enabled BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfEnabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enabled IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByEnabled(Boolean... values) {
        return fetch(Documents.DOCUMENTS.ENABLED, values);
    }

    /**
     * Fetch records that have <code>disabled_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDisabledAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DISABLED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>disabled_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDisabledAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.DISABLED_AT, values);
    }

    /**
     * Fetch records that have <code>disabled_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDisabledBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DISABLED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>disabled_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDisabledBy(UUID... values) {
        return fetch(Documents.DOCUMENTS.DISABLED_BY, values);
    }

    /**
     * Fetch records that have <code>archived BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfArchived(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.ARCHIVED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>archived IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByArchived(Boolean... values) {
        return fetch(Documents.DOCUMENTS.ARCHIVED, values);
    }

    /**
     * Fetch records that have <code>archived_reason BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfArchivedReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.ARCHIVED_REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>archived_reason IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByArchivedReason(String... values) {
        return fetch(Documents.DOCUMENTS.ARCHIVED_REASON, values);
    }

    /**
     * Fetch records that have <code>archived_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfArchivedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.ARCHIVED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>archived_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByArchivedBy(UUID... values) {
        return fetch(Documents.DOCUMENTS.ARCHIVED_BY, values);
    }

    /**
     * Fetch records that have <code>archived_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfArchivedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.ARCHIVED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>archived_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByArchivedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.ARCHIVED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Documents.DOCUMENTS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>doc_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDocType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DOC_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>doc_type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDocType(String... values) {
        return fetch(Documents.DOCUMENTS.DOC_TYPE, values);
    }

    /**
     * Fetch records that have <code>doc_metadata BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDocMetadata(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DOC_METADATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>doc_metadata IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDocMetadata(JSON... values) {
        return fetch(Documents.DOCUMENTS.DOC_METADATA, values);
    }

    /**
     * Fetch records that have <code>doc_form BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDocForm(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DOC_FORM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>doc_form IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDocForm(String... values) {
        return fetch(Documents.DOCUMENTS.DOC_FORM, values);
    }

    /**
     * Fetch records that have <code>doc_language BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchRangeOfDocLanguage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Documents.DOCUMENTS.DOC_LANGUAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>doc_language IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Documents> fetchByDocLanguage(String... values) {
        return fetch(Documents.DOCUMENTS.DOC_LANGUAGE, values);
    }
}
