/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.CeleryTaskmeta;
import com.bonc.lops.jooq.tables.records.CeleryTaskmetaRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CeleryTaskmetaDao extends DAOImpl<CeleryTaskmetaRecord, com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta, Integer> {

    /**
     * Create a new CeleryTaskmetaDao without any configuration
     */
    public CeleryTaskmetaDao() {
        super(CeleryTaskmeta.CELERY_TASKMETA, com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta.class);
    }

    /**
     * Create a new CeleryTaskmetaDao with an attached configuration
     */
    @Autowired
    public CeleryTaskmetaDao(Configuration configuration) {
        super(CeleryTaskmeta.CELERY_TASKMETA, com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta.class, configuration);
    }

    @Override
    public Integer getId(com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchById(Integer... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta fetchOneById(Integer value) {
        return fetchOne(CeleryTaskmeta.CELERY_TASKMETA.ID, value);
    }

    /**
     * Fetch records that have <code>task_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfTaskId(String lowerInclusive, String upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.TASK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByTaskId(String... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.TASK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>task_id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta fetchOneByTaskId(String value) {
        return fetchOne(CeleryTaskmeta.CELERY_TASKMETA.TASK_ID, value);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByStatus(String... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.STATUS, values);
    }

    /**
     * Fetch records that have <code>result BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfResult(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.RESULT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>result IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByResult(byte[]... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.RESULT, values);
    }

    /**
     * Fetch records that have <code>date_done BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfDateDone(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.DATE_DONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date_done IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByDateDone(LocalDateTime... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.DATE_DONE, values);
    }

    /**
     * Fetch records that have <code>traceback BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfTraceback(String lowerInclusive, String upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.TRACEBACK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>traceback IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByTraceback(String... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.TRACEBACK, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByName(String... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.NAME, values);
    }

    /**
     * Fetch records that have <code>args BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfArgs(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.ARGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>args IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByArgs(byte[]... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.ARGS, values);
    }

    /**
     * Fetch records that have <code>kwargs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfKwargs(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.KWARGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>kwargs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByKwargs(byte[]... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.KWARGS, values);
    }

    /**
     * Fetch records that have <code>worker BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfWorker(String lowerInclusive, String upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.WORKER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>worker IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByWorker(String... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.WORKER, values);
    }

    /**
     * Fetch records that have <code>retries BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfRetries(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.RETRIES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>retries IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByRetries(Integer... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.RETRIES, values);
    }

    /**
     * Fetch records that have <code>queue BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchRangeOfQueue(String lowerInclusive, String upperInclusive) {
        return fetchRange(CeleryTaskmeta.CELERY_TASKMETA.QUEUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>queue IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTaskmeta> fetchByQueue(String... values) {
        return fetch(CeleryTaskmeta.CELERY_TASKMETA.QUEUE, values);
    }
}
