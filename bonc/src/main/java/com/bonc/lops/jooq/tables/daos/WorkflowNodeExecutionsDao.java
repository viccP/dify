/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.WorkflowNodeExecutions;
import com.bonc.lops.jooq.tables.records.WorkflowNodeExecutionsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class WorkflowNodeExecutionsDao extends DAOImpl<WorkflowNodeExecutionsRecord, com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions, UUID> {

    /**
     * Create a new WorkflowNodeExecutionsDao without any configuration
     */
    public WorkflowNodeExecutionsDao() {
        super(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS, com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions.class);
    }

    /**
     * Create a new WorkflowNodeExecutionsDao with an attached configuration
     */
    @Autowired
    public WorkflowNodeExecutionsDao(Configuration configuration) {
        super(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS, com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchById(UUID... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions fetchOneById(UUID value) {
        return fetchOne(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByTenantId(UUID... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByAppId(UUID... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>workflow_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfWorkflowId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.WORKFLOW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workflow_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByWorkflowId(UUID... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.WORKFLOW_ID, values);
    }

    /**
     * Fetch records that have <code>triggered_from BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfTriggeredFrom(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.TRIGGERED_FROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>triggered_from IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByTriggeredFrom(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.TRIGGERED_FROM, values);
    }

    /**
     * Fetch records that have <code>workflow_run_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfWorkflowRunId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.WORKFLOW_RUN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workflow_run_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByWorkflowRunId(UUID... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.WORKFLOW_RUN_ID, values);
    }

    /**
     * Fetch records that have <code>index BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfIndex(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.INDEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>index IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByIndex(Integer... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.INDEX, values);
    }

    /**
     * Fetch records that have <code>predecessor_node_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfPredecessorNodeId(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.PREDECESSOR_NODE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>predecessor_node_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByPredecessorNodeId(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.PREDECESSOR_NODE_ID, values);
    }

    /**
     * Fetch records that have <code>node_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfNodeId(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.NODE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>node_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByNodeId(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.NODE_ID, values);
    }

    /**
     * Fetch records that have <code>node_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfNodeType(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.NODE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>node_type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByNodeType(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.NODE_TYPE, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByTitle(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.TITLE, values);
    }

    /**
     * Fetch records that have <code>inputs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfInputs(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.INPUTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inputs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByInputs(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.INPUTS, values);
    }

    /**
     * Fetch records that have <code>process_data BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfProcessData(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.PROCESS_DATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>process_data IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByProcessData(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.PROCESS_DATA, values);
    }

    /**
     * Fetch records that have <code>outputs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfOutputs(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.OUTPUTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>outputs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByOutputs(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.OUTPUTS, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByStatus(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.STATUS, values);
    }

    /**
     * Fetch records that have <code>error BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfError(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.ERROR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>error IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByError(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.ERROR, values);
    }

    /**
     * Fetch records that have <code>elapsed_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfElapsedTime(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.ELAPSED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>elapsed_time IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByElapsedTime(Double... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.ELAPSED_TIME, values);
    }

    /**
     * Fetch records that have <code>execution_metadata BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfExecutionMetadata(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.EXECUTION_METADATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>execution_metadata IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByExecutionMetadata(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.EXECUTION_METADATA, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>created_by_role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfCreatedByRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.CREATED_BY_ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by_role IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByCreatedByRole(String... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.CREATED_BY_ROLE, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfCreatedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByCreatedBy(UUID... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>finished_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchRangeOfFinishedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.FINISHED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>finished_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowNodeExecutions> fetchByFinishedAt(LocalDateTime... values) {
        return fetch(WorkflowNodeExecutions.WORKFLOW_NODE_EXECUTIONS.FINISHED_AT, values);
    }
}
