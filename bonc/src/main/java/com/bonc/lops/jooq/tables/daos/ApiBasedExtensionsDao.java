/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.ApiBasedExtensions;
import com.bonc.lops.jooq.tables.records.ApiBasedExtensionsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ApiBasedExtensionsDao extends DAOImpl<ApiBasedExtensionsRecord, com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions, UUID> {

    /**
     * Create a new ApiBasedExtensionsDao without any configuration
     */
    public ApiBasedExtensionsDao() {
        super(ApiBasedExtensions.API_BASED_EXTENSIONS, com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions.class);
    }

    /**
     * Create a new ApiBasedExtensionsDao with an attached configuration
     */
    @Autowired
    public ApiBasedExtensionsDao(Configuration configuration) {
        super(ApiBasedExtensions.API_BASED_EXTENSIONS, com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ApiBasedExtensions.API_BASED_EXTENSIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchById(UUID... values) {
        return fetch(ApiBasedExtensions.API_BASED_EXTENSIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions fetchOneById(UUID value) {
        return fetchOne(ApiBasedExtensions.API_BASED_EXTENSIONS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ApiBasedExtensions.API_BASED_EXTENSIONS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchByTenantId(UUID... values) {
        return fetch(ApiBasedExtensions.API_BASED_EXTENSIONS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(ApiBasedExtensions.API_BASED_EXTENSIONS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchByName(String... values) {
        return fetch(ApiBasedExtensions.API_BASED_EXTENSIONS.NAME, values);
    }

    /**
     * Fetch records that have <code>api_endpoint BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchRangeOfApiEndpoint(String lowerInclusive, String upperInclusive) {
        return fetchRange(ApiBasedExtensions.API_BASED_EXTENSIONS.API_ENDPOINT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>api_endpoint IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchByApiEndpoint(String... values) {
        return fetch(ApiBasedExtensions.API_BASED_EXTENSIONS.API_ENDPOINT, values);
    }

    /**
     * Fetch records that have <code>api_key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchRangeOfApiKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(ApiBasedExtensions.API_BASED_EXTENSIONS.API_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>api_key IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchByApiKey(String... values) {
        return fetch(ApiBasedExtensions.API_BASED_EXTENSIONS.API_KEY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ApiBasedExtensions.API_BASED_EXTENSIONS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ApiBasedExtensions> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ApiBasedExtensions.API_BASED_EXTENSIONS.CREATED_AT, values);
    }
}
