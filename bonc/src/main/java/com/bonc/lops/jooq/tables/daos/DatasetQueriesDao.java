/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.DatasetQueries;
import com.bonc.lops.jooq.tables.records.DatasetQueriesRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class DatasetQueriesDao extends DAOImpl<DatasetQueriesRecord, com.bonc.lops.jooq.tables.pojos.DatasetQueries, UUID> {

    /**
     * Create a new DatasetQueriesDao without any configuration
     */
    public DatasetQueriesDao() {
        super(DatasetQueries.DATASET_QUERIES, com.bonc.lops.jooq.tables.pojos.DatasetQueries.class);
    }

    /**
     * Create a new DatasetQueriesDao with an attached configuration
     */
    @Autowired
    public DatasetQueriesDao(Configuration configuration) {
        super(DatasetQueries.DATASET_QUERIES, com.bonc.lops.jooq.tables.pojos.DatasetQueries.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.DatasetQueries object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(DatasetQueries.DATASET_QUERIES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchById(UUID... values) {
        return fetch(DatasetQueries.DATASET_QUERIES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.DatasetQueries fetchOneById(UUID value) {
        return fetchOne(DatasetQueries.DATASET_QUERIES.ID, value);
    }

    /**
     * Fetch records that have <code>dataset_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchRangeOfDatasetId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(DatasetQueries.DATASET_QUERIES.DATASET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dataset_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchByDatasetId(UUID... values) {
        return fetch(DatasetQueries.DATASET_QUERIES.DATASET_ID, values);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchRangeOfContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(DatasetQueries.DATASET_QUERIES.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchByContent(String... values) {
        return fetch(DatasetQueries.DATASET_QUERIES.CONTENT, values);
    }

    /**
     * Fetch records that have <code>source BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchRangeOfSource(String lowerInclusive, String upperInclusive) {
        return fetchRange(DatasetQueries.DATASET_QUERIES.SOURCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchBySource(String... values) {
        return fetch(DatasetQueries.DATASET_QUERIES.SOURCE, values);
    }

    /**
     * Fetch records that have <code>source_app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchRangeOfSourceAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(DatasetQueries.DATASET_QUERIES.SOURCE_APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source_app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchBySourceAppId(UUID... values) {
        return fetch(DatasetQueries.DATASET_QUERIES.SOURCE_APP_ID, values);
    }

    /**
     * Fetch records that have <code>created_by_role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchRangeOfCreatedByRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(DatasetQueries.DATASET_QUERIES.CREATED_BY_ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by_role IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchByCreatedByRole(String... values) {
        return fetch(DatasetQueries.DATASET_QUERIES.CREATED_BY_ROLE, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchRangeOfCreatedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(DatasetQueries.DATASET_QUERIES.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchByCreatedBy(UUID... values) {
        return fetch(DatasetQueries.DATASET_QUERIES.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(DatasetQueries.DATASET_QUERIES.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.DatasetQueries> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(DatasetQueries.DATASET_QUERIES.CREATED_AT, values);
    }
}
