/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.records;


import com.bonc.lops.jooq.tables.TenantAccountJoins;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TenantAccountJoinsRecord extends UpdatableRecordImpl<TenantAccountJoinsRecord> implements Record8<UUID, UUID, UUID, String, UUID, LocalDateTime, LocalDateTime, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tenant_account_joins.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tenant_account_joins.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.tenant_account_joins.tenant_id</code>.
     */
    public void setTenantId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tenant_account_joins.tenant_id</code>.
     */
    public UUID getTenantId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.tenant_account_joins.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tenant_account_joins.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.tenant_account_joins.role</code>.
     */
    public void setRole(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tenant_account_joins.role</code>.
     */
    public String getRole() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.tenant_account_joins.invited_by</code>.
     */
    public void setInvitedBy(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tenant_account_joins.invited_by</code>.
     */
    public UUID getInvitedBy() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.tenant_account_joins.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tenant_account_joins.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.tenant_account_joins.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.tenant_account_joins.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.tenant_account_joins.current</code>.
     */
    public void setCurrent(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.tenant_account_joins.current</code>.
     */
    public Boolean getCurrent() {
        return (Boolean) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, UUID, String, UUID, LocalDateTime, LocalDateTime, Boolean> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, UUID, String, UUID, LocalDateTime, LocalDateTime, Boolean> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return TenantAccountJoins.TENANT_ACCOUNT_JOINS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return TenantAccountJoins.TENANT_ACCOUNT_JOINS.TENANT_ID;
    }

    @Override
    public Field<UUID> field3() {
        return TenantAccountJoins.TENANT_ACCOUNT_JOINS.ACCOUNT_ID;
    }

    @Override
    public Field<String> field4() {
        return TenantAccountJoins.TENANT_ACCOUNT_JOINS.ROLE;
    }

    @Override
    public Field<UUID> field5() {
        return TenantAccountJoins.TENANT_ACCOUNT_JOINS.INVITED_BY;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TenantAccountJoins.TENANT_ACCOUNT_JOINS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return TenantAccountJoins.TENANT_ACCOUNT_JOINS.UPDATED_AT;
    }

    @Override
    public Field<Boolean> field8() {
        return TenantAccountJoins.TENANT_ACCOUNT_JOINS.CURRENT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getTenantId();
    }

    @Override
    public UUID component3() {
        return getAccountId();
    }

    @Override
    public String component4() {
        return getRole();
    }

    @Override
    public UUID component5() {
        return getInvitedBy();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public Boolean component8() {
        return getCurrent();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getTenantId();
    }

    @Override
    public UUID value3() {
        return getAccountId();
    }

    @Override
    public String value4() {
        return getRole();
    }

    @Override
    public UUID value5() {
        return getInvitedBy();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public Boolean value8() {
        return getCurrent();
    }

    @Override
    public TenantAccountJoinsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public TenantAccountJoinsRecord value2(UUID value) {
        setTenantId(value);
        return this;
    }

    @Override
    public TenantAccountJoinsRecord value3(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public TenantAccountJoinsRecord value4(String value) {
        setRole(value);
        return this;
    }

    @Override
    public TenantAccountJoinsRecord value5(UUID value) {
        setInvitedBy(value);
        return this;
    }

    @Override
    public TenantAccountJoinsRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TenantAccountJoinsRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public TenantAccountJoinsRecord value8(Boolean value) {
        setCurrent(value);
        return this;
    }

    @Override
    public TenantAccountJoinsRecord values(UUID value1, UUID value2, UUID value3, String value4, UUID value5, LocalDateTime value6, LocalDateTime value7, Boolean value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TenantAccountJoinsRecord
     */
    public TenantAccountJoinsRecord() {
        super(TenantAccountJoins.TENANT_ACCOUNT_JOINS);
    }

    /**
     * Create a detached, initialised TenantAccountJoinsRecord
     */
    public TenantAccountJoinsRecord(UUID id, UUID tenantId, UUID accountId, String role, UUID invitedBy, LocalDateTime createdAt, LocalDateTime updatedAt, Boolean current) {
        super(TenantAccountJoins.TENANT_ACCOUNT_JOINS);

        setId(id);
        setTenantId(tenantId);
        setAccountId(accountId);
        setRole(role);
        setInvitedBy(invitedBy);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCurrent(current);
    }
}
