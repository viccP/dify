/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.records;


import com.bonc.lops.jooq.tables.ToolConversationVariables;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ToolConversationVariablesRecord extends UpdatableRecordImpl<ToolConversationVariablesRecord> implements Record7<UUID, UUID, UUID, UUID, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tool_conversation_variables.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tool_conversation_variables.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.tool_conversation_variables.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tool_conversation_variables.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.tool_conversation_variables.tenant_id</code>.
     */
    public void setTenantId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tool_conversation_variables.tenant_id</code>.
     */
    public UUID getTenantId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.tool_conversation_variables.conversation_id</code>.
     */
    public void setConversationId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tool_conversation_variables.conversation_id</code>.
     */
    public UUID getConversationId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.tool_conversation_variables.variables_str</code>.
     */
    public void setVariablesStr(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tool_conversation_variables.variables_str</code>.
     */
    public String getVariablesStr() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.tool_conversation_variables.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tool_conversation_variables.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.tool_conversation_variables.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.tool_conversation_variables.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, UUID, UUID, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, UUID, UUID, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.ID;
    }

    @Override
    public Field<UUID> field2() {
        return ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.USER_ID;
    }

    @Override
    public Field<UUID> field3() {
        return ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.TENANT_ID;
    }

    @Override
    public Field<UUID> field4() {
        return ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.CONVERSATION_ID;
    }

    @Override
    public Field<String> field5() {
        return ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.VARIABLES_STR;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ToolConversationVariables.TOOL_CONVERSATION_VARIABLES.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getUserId();
    }

    @Override
    public UUID component3() {
        return getTenantId();
    }

    @Override
    public UUID component4() {
        return getConversationId();
    }

    @Override
    public String component5() {
        return getVariablesStr();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getUserId();
    }

    @Override
    public UUID value3() {
        return getTenantId();
    }

    @Override
    public UUID value4() {
        return getConversationId();
    }

    @Override
    public String value5() {
        return getVariablesStr();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public ToolConversationVariablesRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ToolConversationVariablesRecord value2(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public ToolConversationVariablesRecord value3(UUID value) {
        setTenantId(value);
        return this;
    }

    @Override
    public ToolConversationVariablesRecord value4(UUID value) {
        setConversationId(value);
        return this;
    }

    @Override
    public ToolConversationVariablesRecord value5(String value) {
        setVariablesStr(value);
        return this;
    }

    @Override
    public ToolConversationVariablesRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ToolConversationVariablesRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ToolConversationVariablesRecord values(UUID value1, UUID value2, UUID value3, UUID value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ToolConversationVariablesRecord
     */
    public ToolConversationVariablesRecord() {
        super(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES);
    }

    /**
     * Create a detached, initialised ToolConversationVariablesRecord
     */
    public ToolConversationVariablesRecord(UUID id, UUID userId, UUID tenantId, UUID conversationId, String variablesStr, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(ToolConversationVariables.TOOL_CONVERSATION_VARIABLES);

        setId(id);
        setUserId(userId);
        setTenantId(tenantId);
        setConversationId(conversationId);
        setVariablesStr(variablesStr);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
