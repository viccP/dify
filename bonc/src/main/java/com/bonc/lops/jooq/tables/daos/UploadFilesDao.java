/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.UploadFiles;
import com.bonc.lops.jooq.tables.records.UploadFilesRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UploadFilesDao extends DAOImpl<UploadFilesRecord, com.bonc.lops.jooq.tables.pojos.UploadFiles, UUID> {

    /**
     * Create a new UploadFilesDao without any configuration
     */
    public UploadFilesDao() {
        super(UploadFiles.UPLOAD_FILES, com.bonc.lops.jooq.tables.pojos.UploadFiles.class);
    }

    /**
     * Create a new UploadFilesDao with an attached configuration
     */
    @Autowired
    public UploadFilesDao(Configuration configuration) {
        super(UploadFiles.UPLOAD_FILES, com.bonc.lops.jooq.tables.pojos.UploadFiles.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.UploadFiles object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchById(UUID... values) {
        return fetch(UploadFiles.UPLOAD_FILES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.UploadFiles fetchOneById(UUID value) {
        return fetchOne(UploadFiles.UPLOAD_FILES.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByTenantId(UUID... values) {
        return fetch(UploadFiles.UPLOAD_FILES.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>storage_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfStorageType(String lowerInclusive, String upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.STORAGE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>storage_type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByStorageType(String... values) {
        return fetch(UploadFiles.UPLOAD_FILES.STORAGE_TYPE, values);
    }

    /**
     * Fetch records that have <code>key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByKey(String... values) {
        return fetch(UploadFiles.UPLOAD_FILES.KEY, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByName(String... values) {
        return fetch(UploadFiles.UPLOAD_FILES.NAME, values);
    }

    /**
     * Fetch records that have <code>size BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfSize(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>size IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchBySize(Integer... values) {
        return fetch(UploadFiles.UPLOAD_FILES.SIZE, values);
    }

    /**
     * Fetch records that have <code>extension BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfExtension(String lowerInclusive, String upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.EXTENSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extension IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByExtension(String... values) {
        return fetch(UploadFiles.UPLOAD_FILES.EXTENSION, values);
    }

    /**
     * Fetch records that have <code>mime_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfMimeType(String lowerInclusive, String upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.MIME_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mime_type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByMimeType(String... values) {
        return fetch(UploadFiles.UPLOAD_FILES.MIME_TYPE, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfCreatedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByCreatedBy(UUID... values) {
        return fetch(UploadFiles.UPLOAD_FILES.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(UploadFiles.UPLOAD_FILES.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>used BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfUsed(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.USED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>used IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByUsed(Boolean... values) {
        return fetch(UploadFiles.UPLOAD_FILES.USED, values);
    }

    /**
     * Fetch records that have <code>used_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfUsedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.USED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>used_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByUsedBy(UUID... values) {
        return fetch(UploadFiles.UPLOAD_FILES.USED_BY, values);
    }

    /**
     * Fetch records that have <code>used_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfUsedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.USED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>used_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByUsedAt(LocalDateTime... values) {
        return fetch(UploadFiles.UPLOAD_FILES.USED_AT, values);
    }

    /**
     * Fetch records that have <code>hash BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByHash(String... values) {
        return fetch(UploadFiles.UPLOAD_FILES.HASH, values);
    }

    /**
     * Fetch records that have <code>created_by_role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchRangeOfCreatedByRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(UploadFiles.UPLOAD_FILES.CREATED_BY_ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by_role IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.UploadFiles> fetchByCreatedByRole(String... values) {
        return fetch(UploadFiles.UPLOAD_FILES.CREATED_BY_ROLE, values);
    }
}
