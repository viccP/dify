/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.Conversations;
import com.bonc.lops.jooq.tables.records.ConversationsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ConversationsDao extends DAOImpl<ConversationsRecord, com.bonc.lops.jooq.tables.pojos.Conversations, UUID> {

    /**
     * Create a new ConversationsDao without any configuration
     */
    public ConversationsDao() {
        super(Conversations.CONVERSATIONS, com.bonc.lops.jooq.tables.pojos.Conversations.class);
    }

    /**
     * Create a new ConversationsDao with an attached configuration
     */
    @Autowired
    public ConversationsDao(Configuration configuration) {
        super(Conversations.CONVERSATIONS, com.bonc.lops.jooq.tables.pojos.Conversations.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.Conversations object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchById(UUID... values) {
        return fetch(Conversations.CONVERSATIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.Conversations fetchOneById(UUID value) {
        return fetchOne(Conversations.CONVERSATIONS.ID, value);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByAppId(UUID... values) {
        return fetch(Conversations.CONVERSATIONS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>app_model_config_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfAppModelConfigId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.APP_MODEL_CONFIG_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_model_config_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByAppModelConfigId(UUID... values) {
        return fetch(Conversations.CONVERSATIONS.APP_MODEL_CONFIG_ID, values);
    }

    /**
     * Fetch records that have <code>model_provider BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfModelProvider(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.MODEL_PROVIDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_provider IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByModelProvider(String... values) {
        return fetch(Conversations.CONVERSATIONS.MODEL_PROVIDER, values);
    }

    /**
     * Fetch records that have <code>override_model_configs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfOverrideModelConfigs(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.OVERRIDE_MODEL_CONFIGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>override_model_configs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByOverrideModelConfigs(String... values) {
        return fetch(Conversations.CONVERSATIONS.OVERRIDE_MODEL_CONFIGS, values);
    }

    /**
     * Fetch records that have <code>model_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfModelId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.MODEL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>model_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByModelId(String... values) {
        return fetch(Conversations.CONVERSATIONS.MODEL_ID, values);
    }

    /**
     * Fetch records that have <code>mode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfMode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.MODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mode IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByMode(String... values) {
        return fetch(Conversations.CONVERSATIONS.MODE, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByName(String... values) {
        return fetch(Conversations.CONVERSATIONS.NAME, values);
    }

    /**
     * Fetch records that have <code>summary BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfSummary(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.SUMMARY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>summary IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchBySummary(String... values) {
        return fetch(Conversations.CONVERSATIONS.SUMMARY, values);
    }

    /**
     * Fetch records that have <code>inputs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfInputs(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.INPUTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inputs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByInputs(JSON... values) {
        return fetch(Conversations.CONVERSATIONS.INPUTS, values);
    }

    /**
     * Fetch records that have <code>introduction BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfIntroduction(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.INTRODUCTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>introduction IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByIntroduction(String... values) {
        return fetch(Conversations.CONVERSATIONS.INTRODUCTION, values);
    }

    /**
     * Fetch records that have <code>system_instruction BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfSystemInstruction(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.SYSTEM_INSTRUCTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>system_instruction IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchBySystemInstruction(String... values) {
        return fetch(Conversations.CONVERSATIONS.SYSTEM_INSTRUCTION, values);
    }

    /**
     * Fetch records that have <code>system_instruction_tokens BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfSystemInstructionTokens(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.SYSTEM_INSTRUCTION_TOKENS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>system_instruction_tokens IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchBySystemInstructionTokens(Integer... values) {
        return fetch(Conversations.CONVERSATIONS.SYSTEM_INSTRUCTION_TOKENS, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByStatus(String... values) {
        return fetch(Conversations.CONVERSATIONS.STATUS, values);
    }

    /**
     * Fetch records that have <code>from_source BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfFromSource(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.FROM_SOURCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>from_source IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByFromSource(String... values) {
        return fetch(Conversations.CONVERSATIONS.FROM_SOURCE, values);
    }

    /**
     * Fetch records that have <code>from_end_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfFromEndUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.FROM_END_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>from_end_user_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByFromEndUserId(UUID... values) {
        return fetch(Conversations.CONVERSATIONS.FROM_END_USER_ID, values);
    }

    /**
     * Fetch records that have <code>from_account_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfFromAccountId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.FROM_ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>from_account_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByFromAccountId(UUID... values) {
        return fetch(Conversations.CONVERSATIONS.FROM_ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>read_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfReadAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.READ_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>read_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByReadAt(LocalDateTime... values) {
        return fetch(Conversations.CONVERSATIONS.READ_AT, values);
    }

    /**
     * Fetch records that have <code>read_account_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfReadAccountId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.READ_ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>read_account_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByReadAccountId(UUID... values) {
        return fetch(Conversations.CONVERSATIONS.READ_ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Conversations.CONVERSATIONS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Conversations.CONVERSATIONS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfIsDeleted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByIsDeleted(Boolean... values) {
        return fetch(Conversations.CONVERSATIONS.IS_DELETED, values);
    }

    /**
     * Fetch records that have <code>invoke_from BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchRangeOfInvokeFrom(String lowerInclusive, String upperInclusive) {
        return fetchRange(Conversations.CONVERSATIONS.INVOKE_FROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>invoke_from IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.Conversations> fetchByInvokeFrom(String... values) {
        return fetch(Conversations.CONVERSATIONS.INVOKE_FROM, values);
    }
}
