/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.AppAnnotationSettings;
import com.bonc.lops.jooq.tables.records.AppAnnotationSettingsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AppAnnotationSettingsDao extends DAOImpl<AppAnnotationSettingsRecord, com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings, UUID> {

    /**
     * Create a new AppAnnotationSettingsDao without any configuration
     */
    public AppAnnotationSettingsDao() {
        super(AppAnnotationSettings.APP_ANNOTATION_SETTINGS, com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings.class);
    }

    /**
     * Create a new AppAnnotationSettingsDao with an attached configuration
     */
    @Autowired
    public AppAnnotationSettingsDao(Configuration configuration) {
        super(AppAnnotationSettings.APP_ANNOTATION_SETTINGS, com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchById(UUID... values) {
        return fetch(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings fetchOneById(UUID value) {
        return fetchOne(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.ID, value);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchByAppId(UUID... values) {
        return fetch(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>score_threshold BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchRangeOfScoreThreshold(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.SCORE_THRESHOLD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>score_threshold IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchByScoreThreshold(Double... values) {
        return fetch(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.SCORE_THRESHOLD, values);
    }

    /**
     * Fetch records that have <code>collection_binding_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchRangeOfCollectionBindingId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.COLLECTION_BINDING_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collection_binding_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchByCollectionBindingId(UUID... values) {
        return fetch(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.COLLECTION_BINDING_ID, values);
    }

    /**
     * Fetch records that have <code>created_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchRangeOfCreatedUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.CREATED_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_user_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchByCreatedUserId(UUID... values) {
        return fetch(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.CREATED_USER_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchRangeOfUpdatedUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.UPDATED_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_user_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchByUpdatedUserId(UUID... values) {
        return fetch(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.UPDATED_USER_ID, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.AppAnnotationSettings> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(AppAnnotationSettings.APP_ANNOTATION_SETTINGS.UPDATED_AT, values);
    }
}
