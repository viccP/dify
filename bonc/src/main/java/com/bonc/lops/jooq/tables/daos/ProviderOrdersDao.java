/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.ProviderOrders;
import com.bonc.lops.jooq.tables.records.ProviderOrdersRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ProviderOrdersDao extends DAOImpl<ProviderOrdersRecord, com.bonc.lops.jooq.tables.pojos.ProviderOrders, UUID> {

    /**
     * Create a new ProviderOrdersDao without any configuration
     */
    public ProviderOrdersDao() {
        super(ProviderOrders.PROVIDER_ORDERS, com.bonc.lops.jooq.tables.pojos.ProviderOrders.class);
    }

    /**
     * Create a new ProviderOrdersDao with an attached configuration
     */
    @Autowired
    public ProviderOrdersDao(Configuration configuration) {
        super(ProviderOrders.PROVIDER_ORDERS, com.bonc.lops.jooq.tables.pojos.ProviderOrders.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.ProviderOrders object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchById(UUID... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.ProviderOrders fetchOneById(UUID value) {
        return fetchOne(ProviderOrders.PROVIDER_ORDERS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByTenantId(UUID... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>provider_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfProviderName(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.PROVIDER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>provider_name IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByProviderName(String... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.PROVIDER_NAME, values);
    }

    /**
     * Fetch records that have <code>account_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfAccountId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByAccountId(UUID... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>payment_product_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfPaymentProductId(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.PAYMENT_PRODUCT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_product_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByPaymentProductId(String... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.PAYMENT_PRODUCT_ID, values);
    }

    /**
     * Fetch records that have <code>payment_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfPaymentId(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.PAYMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByPaymentId(String... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.PAYMENT_ID, values);
    }

    /**
     * Fetch records that have <code>transaction_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfTransactionId(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.TRANSACTION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transaction_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByTransactionId(String... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.TRANSACTION_ID, values);
    }

    /**
     * Fetch records that have <code>quantity BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfQuantity(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.QUANTITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>quantity IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByQuantity(Integer... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.QUANTITY, values);
    }

    /**
     * Fetch records that have <code>currency BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfCurrency(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.CURRENCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>currency IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByCurrency(String... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.CURRENCY, values);
    }

    /**
     * Fetch records that have <code>total_amount BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfTotalAmount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.TOTAL_AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_amount IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByTotalAmount(Integer... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.TOTAL_AMOUNT, values);
    }

    /**
     * Fetch records that have <code>payment_status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfPaymentStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.PAYMENT_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByPaymentStatus(String... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.PAYMENT_STATUS, values);
    }

    /**
     * Fetch records that have <code>paid_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfPaidAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.PAID_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>paid_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByPaidAt(LocalDateTime... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.PAID_AT, values);
    }

    /**
     * Fetch records that have <code>pay_failed_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfPayFailedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.PAY_FAILED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pay_failed_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByPayFailedAt(LocalDateTime... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.PAY_FAILED_AT, values);
    }

    /**
     * Fetch records that have <code>refunded_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfRefundedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.REFUNDED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>refunded_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByRefundedAt(LocalDateTime... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.REFUNDED_AT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProviderOrders.PROVIDER_ORDERS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.ProviderOrders> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(ProviderOrders.PROVIDER_ORDERS.UPDATED_AT, values);
    }
}
