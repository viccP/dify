/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.records;


import com.bonc.lops.jooq.tables.AccountIntegrates;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountIntegratesRecord extends UpdatableRecordImpl<AccountIntegratesRecord> implements Record7<UUID, UUID, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.account_integrates.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.account_integrates.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.account_integrates.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.account_integrates.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.account_integrates.provider</code>.
     */
    public void setProvider(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.account_integrates.provider</code>.
     */
    public String getProvider() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.account_integrates.open_id</code>.
     */
    public void setOpenId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.account_integrates.open_id</code>.
     */
    public String getOpenId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.account_integrates.encrypted_token</code>.
     */
    public void setEncryptedToken(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.account_integrates.encrypted_token</code>.
     */
    public String getEncryptedToken() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.account_integrates.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.account_integrates.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.account_integrates.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.account_integrates.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, UUID, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return AccountIntegrates.ACCOUNT_INTEGRATES.ID;
    }

    @Override
    public Field<UUID> field2() {
        return AccountIntegrates.ACCOUNT_INTEGRATES.ACCOUNT_ID;
    }

    @Override
    public Field<String> field3() {
        return AccountIntegrates.ACCOUNT_INTEGRATES.PROVIDER;
    }

    @Override
    public Field<String> field4() {
        return AccountIntegrates.ACCOUNT_INTEGRATES.OPEN_ID;
    }

    @Override
    public Field<String> field5() {
        return AccountIntegrates.ACCOUNT_INTEGRATES.ENCRYPTED_TOKEN;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return AccountIntegrates.ACCOUNT_INTEGRATES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return AccountIntegrates.ACCOUNT_INTEGRATES.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getAccountId();
    }

    @Override
    public String component3() {
        return getProvider();
    }

    @Override
    public String component4() {
        return getOpenId();
    }

    @Override
    public String component5() {
        return getEncryptedToken();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getAccountId();
    }

    @Override
    public String value3() {
        return getProvider();
    }

    @Override
    public String value4() {
        return getOpenId();
    }

    @Override
    public String value5() {
        return getEncryptedToken();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public AccountIntegratesRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public AccountIntegratesRecord value2(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public AccountIntegratesRecord value3(String value) {
        setProvider(value);
        return this;
    }

    @Override
    public AccountIntegratesRecord value4(String value) {
        setOpenId(value);
        return this;
    }

    @Override
    public AccountIntegratesRecord value5(String value) {
        setEncryptedToken(value);
        return this;
    }

    @Override
    public AccountIntegratesRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AccountIntegratesRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AccountIntegratesRecord values(UUID value1, UUID value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountIntegratesRecord
     */
    public AccountIntegratesRecord() {
        super(AccountIntegrates.ACCOUNT_INTEGRATES);
    }

    /**
     * Create a detached, initialised AccountIntegratesRecord
     */
    public AccountIntegratesRecord(UUID id, UUID accountId, String provider, String openId, String encryptedToken, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(AccountIntegrates.ACCOUNT_INTEGRATES);

        setId(id);
        setAccountId(accountId);
        setProvider(provider);
        setOpenId(openId);
        setEncryptedToken(encryptedToken);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
