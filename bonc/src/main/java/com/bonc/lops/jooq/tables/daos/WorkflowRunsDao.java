/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.WorkflowRuns;
import com.bonc.lops.jooq.tables.records.WorkflowRunsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class WorkflowRunsDao extends DAOImpl<WorkflowRunsRecord, com.bonc.lops.jooq.tables.pojos.WorkflowRuns, UUID> {

    /**
     * Create a new WorkflowRunsDao without any configuration
     */
    public WorkflowRunsDao() {
        super(WorkflowRuns.WORKFLOW_RUNS, com.bonc.lops.jooq.tables.pojos.WorkflowRuns.class);
    }

    /**
     * Create a new WorkflowRunsDao with an attached configuration
     */
    @Autowired
    public WorkflowRunsDao(Configuration configuration) {
        super(WorkflowRuns.WORKFLOW_RUNS, com.bonc.lops.jooq.tables.pojos.WorkflowRuns.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.WorkflowRuns object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchById(UUID... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.WorkflowRuns fetchOneById(UUID value) {
        return fetchOne(WorkflowRuns.WORKFLOW_RUNS.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfTenantId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByTenantId(UUID... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByAppId(UUID... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>sequence_number BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfSequenceNumber(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.SEQUENCE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sequence_number IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchBySequenceNumber(Integer... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.SEQUENCE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>workflow_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfWorkflowId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.WORKFLOW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workflow_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByWorkflowId(UUID... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.WORKFLOW_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByType(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.TYPE, values);
    }

    /**
     * Fetch records that have <code>triggered_from BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfTriggeredFrom(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.TRIGGERED_FROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>triggered_from IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByTriggeredFrom(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.TRIGGERED_FROM, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfVersion(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByVersion(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.VERSION, values);
    }

    /**
     * Fetch records that have <code>graph BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfGraph(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.GRAPH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>graph IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByGraph(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.GRAPH, values);
    }

    /**
     * Fetch records that have <code>inputs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfInputs(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.INPUTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inputs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByInputs(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.INPUTS, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByStatus(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.STATUS, values);
    }

    /**
     * Fetch records that have <code>outputs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfOutputs(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.OUTPUTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>outputs IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByOutputs(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.OUTPUTS, values);
    }

    /**
     * Fetch records that have <code>error BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfError(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.ERROR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>error IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByError(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.ERROR, values);
    }

    /**
     * Fetch records that have <code>elapsed_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfElapsedTime(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.ELAPSED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>elapsed_time IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByElapsedTime(Double... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.ELAPSED_TIME, values);
    }

    /**
     * Fetch records that have <code>total_tokens BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfTotalTokens(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.TOTAL_TOKENS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_tokens IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByTotalTokens(Integer... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.TOTAL_TOKENS, values);
    }

    /**
     * Fetch records that have <code>total_steps BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfTotalSteps(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.TOTAL_STEPS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>total_steps IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByTotalSteps(Integer... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.TOTAL_STEPS, values);
    }

    /**
     * Fetch records that have <code>created_by_role BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfCreatedByRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.CREATED_BY_ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by_role IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByCreatedByRole(String... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.CREATED_BY_ROLE, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfCreatedBy(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByCreatedBy(UUID... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>finished_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchRangeOfFinishedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(WorkflowRuns.WORKFLOW_RUNS.FINISHED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>finished_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.WorkflowRuns> fetchByFinishedAt(LocalDateTime... values) {
        return fetch(WorkflowRuns.WORKFLOW_RUNS.FINISHED_AT, values);
    }
}
