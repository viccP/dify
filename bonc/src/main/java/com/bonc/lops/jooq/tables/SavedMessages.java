/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables;


import com.bonc.lops.jooq.Indexes;
import com.bonc.lops.jooq.Keys;
import com.bonc.lops.jooq.Public;
import com.bonc.lops.jooq.tables.records.SavedMessagesRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SavedMessages extends TableImpl<SavedMessagesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.saved_messages</code>
     */
    public static final SavedMessages SAVED_MESSAGES = new SavedMessages();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SavedMessagesRecord> getRecordType() {
        return SavedMessagesRecord.class;
    }

    /**
     * The column <code>public.saved_messages.id</code>.
     */
    public final TableField<SavedMessagesRecord, UUID> ID = createField(DSL.name("id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("uuid_generate_v4()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.saved_messages.app_id</code>.
     */
    public final TableField<SavedMessagesRecord, UUID> APP_ID = createField(DSL.name("app_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.saved_messages.message_id</code>.
     */
    public final TableField<SavedMessagesRecord, UUID> MESSAGE_ID = createField(DSL.name("message_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.saved_messages.created_by</code>.
     */
    public final TableField<SavedMessagesRecord, UUID> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.saved_messages.created_at</code>.
     */
    public final TableField<SavedMessagesRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP(0)", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.saved_messages.created_by_role</code>.
     */
    public final TableField<SavedMessagesRecord, String> CREATED_BY_ROLE = createField(DSL.name("created_by_role"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.field("'end_user'::character varying", SQLDataType.VARCHAR)), this, "");

    private SavedMessages(Name alias, Table<SavedMessagesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SavedMessages(Name alias, Table<SavedMessagesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.saved_messages</code> table reference
     */
    public SavedMessages(String alias) {
        this(DSL.name(alias), SAVED_MESSAGES);
    }

    /**
     * Create an aliased <code>public.saved_messages</code> table reference
     */
    public SavedMessages(Name alias) {
        this(alias, SAVED_MESSAGES);
    }

    /**
     * Create a <code>public.saved_messages</code> table reference
     */
    public SavedMessages() {
        this(DSL.name("saved_messages"), null);
    }

    public <O extends Record> SavedMessages(Table<O> child, ForeignKey<O, SavedMessagesRecord> key) {
        super(child, key, SAVED_MESSAGES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SAVED_MESSAGE_MESSAGE_IDX);
    }

    @Override
    public UniqueKey<SavedMessagesRecord> getPrimaryKey() {
        return Keys.SAVED_MESSAGE_PKEY;
    }

    @Override
    public List<UniqueKey<SavedMessagesRecord>> getKeys() {
        return Arrays.<UniqueKey<SavedMessagesRecord>>asList(Keys.SAVED_MESSAGE_PKEY);
    }

    @Override
    public SavedMessages as(String alias) {
        return new SavedMessages(DSL.name(alias), this);
    }

    @Override
    public SavedMessages as(Name alias) {
        return new SavedMessages(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SavedMessages rename(String name) {
        return new SavedMessages(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SavedMessages rename(Name name) {
        return new SavedMessages(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, UUID, UUID, UUID, LocalDateTime, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
