/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.MessageAnnotations;
import com.bonc.lops.jooq.tables.records.MessageAnnotationsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MessageAnnotationsDao extends DAOImpl<MessageAnnotationsRecord, com.bonc.lops.jooq.tables.pojos.MessageAnnotations, UUID> {

    /**
     * Create a new MessageAnnotationsDao without any configuration
     */
    public MessageAnnotationsDao() {
        super(MessageAnnotations.MESSAGE_ANNOTATIONS, com.bonc.lops.jooq.tables.pojos.MessageAnnotations.class);
    }

    /**
     * Create a new MessageAnnotationsDao with an attached configuration
     */
    @Autowired
    public MessageAnnotationsDao(Configuration configuration) {
        super(MessageAnnotations.MESSAGE_ANNOTATIONS, com.bonc.lops.jooq.tables.pojos.MessageAnnotations.class, configuration);
    }

    @Override
    public UUID getId(com.bonc.lops.jooq.tables.pojos.MessageAnnotations object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchById(UUID... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.MessageAnnotations fetchOneById(UUID value) {
        return fetchOne(MessageAnnotations.MESSAGE_ANNOTATIONS.ID, value);
    }

    /**
     * Fetch records that have <code>app_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfAppId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.APP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByAppId(UUID... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.APP_ID, values);
    }

    /**
     * Fetch records that have <code>conversation_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfConversationId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.CONVERSATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>conversation_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByConversationId(UUID... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.CONVERSATION_ID, values);
    }

    /**
     * Fetch records that have <code>message_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfMessageId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.MESSAGE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByMessageId(UUID... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.MESSAGE_ID, values);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByContent(String... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.CONTENT, values);
    }

    /**
     * Fetch records that have <code>account_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfAccountId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByAccountId(UUID... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.ACCOUNT_ID, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>question BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfQuestion(String lowerInclusive, String upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.QUESTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>question IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByQuestion(String... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.QUESTION, values);
    }

    /**
     * Fetch records that have <code>hit_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchRangeOfHitCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(MessageAnnotations.MESSAGE_ANNOTATIONS.HIT_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hit_count IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.MessageAnnotations> fetchByHitCount(Integer... values) {
        return fetch(MessageAnnotations.MESSAGE_ANNOTATIONS.HIT_COUNT, values);
    }
}
