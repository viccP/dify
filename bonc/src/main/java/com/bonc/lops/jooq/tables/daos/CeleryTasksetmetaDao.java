/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.daos;


import com.bonc.lops.jooq.tables.CeleryTasksetmeta;
import com.bonc.lops.jooq.tables.records.CeleryTasksetmetaRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CeleryTasksetmetaDao extends DAOImpl<CeleryTasksetmetaRecord, com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta, Integer> {

    /**
     * Create a new CeleryTasksetmetaDao without any configuration
     */
    public CeleryTasksetmetaDao() {
        super(CeleryTasksetmeta.CELERY_TASKSETMETA, com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta.class);
    }

    /**
     * Create a new CeleryTasksetmetaDao with an attached configuration
     */
    @Autowired
    public CeleryTasksetmetaDao(Configuration configuration) {
        super(CeleryTasksetmeta.CELERY_TASKSETMETA, com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta.class, configuration);
    }

    @Override
    public Integer getId(com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CeleryTasksetmeta.CELERY_TASKSETMETA.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta> fetchById(Integer... values) {
        return fetch(CeleryTasksetmeta.CELERY_TASKSETMETA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta fetchOneById(Integer value) {
        return fetchOne(CeleryTasksetmeta.CELERY_TASKSETMETA.ID, value);
    }

    /**
     * Fetch records that have <code>taskset_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta> fetchRangeOfTasksetId(String lowerInclusive, String upperInclusive) {
        return fetchRange(CeleryTasksetmeta.CELERY_TASKSETMETA.TASKSET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>taskset_id IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta> fetchByTasksetId(String... values) {
        return fetch(CeleryTasksetmeta.CELERY_TASKSETMETA.TASKSET_ID, values);
    }

    /**
     * Fetch a unique record that has <code>taskset_id = value</code>
     */
    public com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta fetchOneByTasksetId(String value) {
        return fetchOne(CeleryTasksetmeta.CELERY_TASKSETMETA.TASKSET_ID, value);
    }

    /**
     * Fetch records that have <code>result BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta> fetchRangeOfResult(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(CeleryTasksetmeta.CELERY_TASKSETMETA.RESULT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>result IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta> fetchByResult(byte[]... values) {
        return fetch(CeleryTasksetmeta.CELERY_TASKSETMETA.RESULT, values);
    }

    /**
     * Fetch records that have <code>date_done BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta> fetchRangeOfDateDone(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CeleryTasksetmeta.CELERY_TASKSETMETA.DATE_DONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date_done IN (values)</code>
     */
    public List<com.bonc.lops.jooq.tables.pojos.CeleryTasksetmeta> fetchByDateDone(LocalDateTime... values) {
        return fetch(CeleryTasksetmeta.CELERY_TASKSETMETA.DATE_DONE, values);
    }
}
