/*
 * This file is generated by jOOQ.
 */
package com.bonc.lops.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.JSON;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Conversations implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID          id;
    private UUID          appId;
    private UUID          appModelConfigId;
    private String        modelProvider;
    private String        overrideModelConfigs;
    private String        modelId;
    private String        mode;
    private String        name;
    private String        summary;
    private JSON          inputs;
    private String        introduction;
    private String        systemInstruction;
    private Integer       systemInstructionTokens;
    private String        status;
    private String        fromSource;
    private UUID          fromEndUserId;
    private UUID          fromAccountId;
    private LocalDateTime readAt;
    private UUID          readAccountId;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private Boolean       isDeleted;
    private String        invokeFrom;

    public Conversations() {}

    public Conversations(Conversations value) {
        this.id = value.id;
        this.appId = value.appId;
        this.appModelConfigId = value.appModelConfigId;
        this.modelProvider = value.modelProvider;
        this.overrideModelConfigs = value.overrideModelConfigs;
        this.modelId = value.modelId;
        this.mode = value.mode;
        this.name = value.name;
        this.summary = value.summary;
        this.inputs = value.inputs;
        this.introduction = value.introduction;
        this.systemInstruction = value.systemInstruction;
        this.systemInstructionTokens = value.systemInstructionTokens;
        this.status = value.status;
        this.fromSource = value.fromSource;
        this.fromEndUserId = value.fromEndUserId;
        this.fromAccountId = value.fromAccountId;
        this.readAt = value.readAt;
        this.readAccountId = value.readAccountId;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.isDeleted = value.isDeleted;
        this.invokeFrom = value.invokeFrom;
    }

    public Conversations(
        UUID          id,
        UUID          appId,
        UUID          appModelConfigId,
        String        modelProvider,
        String        overrideModelConfigs,
        String        modelId,
        String        mode,
        String        name,
        String        summary,
        JSON          inputs,
        String        introduction,
        String        systemInstruction,
        Integer       systemInstructionTokens,
        String        status,
        String        fromSource,
        UUID          fromEndUserId,
        UUID          fromAccountId,
        LocalDateTime readAt,
        UUID          readAccountId,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        Boolean       isDeleted,
        String        invokeFrom
    ) {
        this.id = id;
        this.appId = appId;
        this.appModelConfigId = appModelConfigId;
        this.modelProvider = modelProvider;
        this.overrideModelConfigs = overrideModelConfigs;
        this.modelId = modelId;
        this.mode = mode;
        this.name = name;
        this.summary = summary;
        this.inputs = inputs;
        this.introduction = introduction;
        this.systemInstruction = systemInstruction;
        this.systemInstructionTokens = systemInstructionTokens;
        this.status = status;
        this.fromSource = fromSource;
        this.fromEndUserId = fromEndUserId;
        this.fromAccountId = fromAccountId;
        this.readAt = readAt;
        this.readAccountId = readAccountId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.isDeleted = isDeleted;
        this.invokeFrom = invokeFrom;
    }

    /**
     * Getter for <code>public.conversations.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.conversations.id</code>.
     */
    public void setId(UUID id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.conversations.app_id</code>.
     */
    public UUID getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>public.conversations.app_id</code>.
     */
    public void setAppId(UUID appId) {
        this.appId = appId;
    }

    /**
     * Getter for <code>public.conversations.app_model_config_id</code>.
     */
    public UUID getAppModelConfigId() {
        return this.appModelConfigId;
    }

    /**
     * Setter for <code>public.conversations.app_model_config_id</code>.
     */
    public void setAppModelConfigId(UUID appModelConfigId) {
        this.appModelConfigId = appModelConfigId;
    }

    /**
     * Getter for <code>public.conversations.model_provider</code>.
     */
    public String getModelProvider() {
        return this.modelProvider;
    }

    /**
     * Setter for <code>public.conversations.model_provider</code>.
     */
    public void setModelProvider(String modelProvider) {
        this.modelProvider = modelProvider;
    }

    /**
     * Getter for <code>public.conversations.override_model_configs</code>.
     */
    public String getOverrideModelConfigs() {
        return this.overrideModelConfigs;
    }

    /**
     * Setter for <code>public.conversations.override_model_configs</code>.
     */
    public void setOverrideModelConfigs(String overrideModelConfigs) {
        this.overrideModelConfigs = overrideModelConfigs;
    }

    /**
     * Getter for <code>public.conversations.model_id</code>.
     */
    public String getModelId() {
        return this.modelId;
    }

    /**
     * Setter for <code>public.conversations.model_id</code>.
     */
    public void setModelId(String modelId) {
        this.modelId = modelId;
    }

    /**
     * Getter for <code>public.conversations.mode</code>.
     */
    public String getMode() {
        return this.mode;
    }

    /**
     * Setter for <code>public.conversations.mode</code>.
     */
    public void setMode(String mode) {
        this.mode = mode;
    }

    /**
     * Getter for <code>public.conversations.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.conversations.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.conversations.summary</code>.
     */
    public String getSummary() {
        return this.summary;
    }

    /**
     * Setter for <code>public.conversations.summary</code>.
     */
    public void setSummary(String summary) {
        this.summary = summary;
    }

    /**
     * Getter for <code>public.conversations.inputs</code>.
     */
    public JSON getInputs() {
        return this.inputs;
    }

    /**
     * Setter for <code>public.conversations.inputs</code>.
     */
    public void setInputs(JSON inputs) {
        this.inputs = inputs;
    }

    /**
     * Getter for <code>public.conversations.introduction</code>.
     */
    public String getIntroduction() {
        return this.introduction;
    }

    /**
     * Setter for <code>public.conversations.introduction</code>.
     */
    public void setIntroduction(String introduction) {
        this.introduction = introduction;
    }

    /**
     * Getter for <code>public.conversations.system_instruction</code>.
     */
    public String getSystemInstruction() {
        return this.systemInstruction;
    }

    /**
     * Setter for <code>public.conversations.system_instruction</code>.
     */
    public void setSystemInstruction(String systemInstruction) {
        this.systemInstruction = systemInstruction;
    }

    /**
     * Getter for <code>public.conversations.system_instruction_tokens</code>.
     */
    public Integer getSystemInstructionTokens() {
        return this.systemInstructionTokens;
    }

    /**
     * Setter for <code>public.conversations.system_instruction_tokens</code>.
     */
    public void setSystemInstructionTokens(Integer systemInstructionTokens) {
        this.systemInstructionTokens = systemInstructionTokens;
    }

    /**
     * Getter for <code>public.conversations.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>public.conversations.status</code>.
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for <code>public.conversations.from_source</code>.
     */
    public String getFromSource() {
        return this.fromSource;
    }

    /**
     * Setter for <code>public.conversations.from_source</code>.
     */
    public void setFromSource(String fromSource) {
        this.fromSource = fromSource;
    }

    /**
     * Getter for <code>public.conversations.from_end_user_id</code>.
     */
    public UUID getFromEndUserId() {
        return this.fromEndUserId;
    }

    /**
     * Setter for <code>public.conversations.from_end_user_id</code>.
     */
    public void setFromEndUserId(UUID fromEndUserId) {
        this.fromEndUserId = fromEndUserId;
    }

    /**
     * Getter for <code>public.conversations.from_account_id</code>.
     */
    public UUID getFromAccountId() {
        return this.fromAccountId;
    }

    /**
     * Setter for <code>public.conversations.from_account_id</code>.
     */
    public void setFromAccountId(UUID fromAccountId) {
        this.fromAccountId = fromAccountId;
    }

    /**
     * Getter for <code>public.conversations.read_at</code>.
     */
    public LocalDateTime getReadAt() {
        return this.readAt;
    }

    /**
     * Setter for <code>public.conversations.read_at</code>.
     */
    public void setReadAt(LocalDateTime readAt) {
        this.readAt = readAt;
    }

    /**
     * Getter for <code>public.conversations.read_account_id</code>.
     */
    public UUID getReadAccountId() {
        return this.readAccountId;
    }

    /**
     * Setter for <code>public.conversations.read_account_id</code>.
     */
    public void setReadAccountId(UUID readAccountId) {
        this.readAccountId = readAccountId;
    }

    /**
     * Getter for <code>public.conversations.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.conversations.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.conversations.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.conversations.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.conversations.is_deleted</code>.
     */
    public Boolean getIsDeleted() {
        return this.isDeleted;
    }

    /**
     * Setter for <code>public.conversations.is_deleted</code>.
     */
    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

    /**
     * Getter for <code>public.conversations.invoke_from</code>.
     */
    public String getInvokeFrom() {
        return this.invokeFrom;
    }

    /**
     * Setter for <code>public.conversations.invoke_from</code>.
     */
    public void setInvokeFrom(String invokeFrom) {
        this.invokeFrom = invokeFrom;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Conversations (");

        sb.append(id);
        sb.append(", ").append(appId);
        sb.append(", ").append(appModelConfigId);
        sb.append(", ").append(modelProvider);
        sb.append(", ").append(overrideModelConfigs);
        sb.append(", ").append(modelId);
        sb.append(", ").append(mode);
        sb.append(", ").append(name);
        sb.append(", ").append(summary);
        sb.append(", ").append(inputs);
        sb.append(", ").append(introduction);
        sb.append(", ").append(systemInstruction);
        sb.append(", ").append(systemInstructionTokens);
        sb.append(", ").append(status);
        sb.append(", ").append(fromSource);
        sb.append(", ").append(fromEndUserId);
        sb.append(", ").append(fromAccountId);
        sb.append(", ").append(readAt);
        sb.append(", ").append(readAccountId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(isDeleted);
        sb.append(", ").append(invokeFrom);

        sb.append(")");
        return sb.toString();
    }
}
